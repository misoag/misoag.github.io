<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>CTree</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "ctree.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=ctree.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=ctree.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="standardlibrary.htm">Standard Library</a> /
<a class="h_m" href="datastructures.htm">Classes of data</a> /
CTree</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="ctreenodetype.htm"><img style="vertical-align:middle;"
src="previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="ctreeroot.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">CTree</span>
</p>

<p class="p_Text"><span class="f_Text">Class CTree is a class of
the binary tree of samples of class CTreeNode and its
descendants.</span>
</p>

<p class="p_Text"><span class="f_H3">Description</span>
</p>

<p class="p_Text"><span class="f_Text">Class CTree privides the
possibility to work with a binary tree of <a href="ctreenode.htm"
class="topiclink">CTreeNode</a> class samples and its descendants.
Options of adding/inserting/deleting of three elements and search
in a tree are implemented in the class. Besides that, methods of
work with a file are implemented.</span>
</p>

<p class="p_Text"><span class="f_Text">Note that mechanism of
dynamic memory management is not implemented in class CTree (as
distinct from classes <a href="clist.htm" class=
"topiclink">CList</a> and <a href="carrayobj.htm" class=
"topiclink">CArrayObj</a>). All tree nodes are deleted with memory
release.</span>
</p>

<p class="p_Text"><span class="f_H3">Declaration</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CTree&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">public</span><span class=
"f_CodeExample">&nbsp;CTreeNode</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_H3">Title</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">&nbsp;&nbsp;&nbsp;#include</span><span class=
"f_CodeExample">&nbsp;&lt;Arrays\Tree.mqh&gt;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_H3"><span class="f_H3">Class Methods</span>
</p>

<div style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 7px 17px;">
<table class="EnumTable" cellspacing="0" cellpadding="5" border="1"
style=
"border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Attributes</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreeroot.htm" class="topiclink">Root</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets a root node of
the tree</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Creation of a new element</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreecreateelement.htm" class="topiclink">CreateElement</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Creates a new node
instance</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Filling</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreeinsert.htm" class="topiclink">Insert</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Adds a node to a
tree</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Deletion</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreedetach.htm" class="topiclink">Detach</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Detaches a specified
node from a tree</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreedelete.htm" class="topiclink">Delete</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Deletes a specified
node from a tree</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreeclear.htm" class="topiclink">Clear</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Deletes all nodes of
a tree</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Search</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreefind.htm" class="topiclink">Find</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Searches for a node
in a tree by sample</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Input/output</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">virtual <a href=
"ctreesave.htm" class="topiclink">Save</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Saves all the tree
data to a file</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">virtual <a href=
"ctreeload.htm" class="topiclink">Load</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Downloads tree data
from a file</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">virtual <a href=
"ctreetype.htm" class="topiclink">Type</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets identifier of
the tree type</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Trees of CTreeNode class
descendants  descendants of class CTree get practical
application.</span>
</p>

<p class="p_Text"><span class="f_Text">Descendant of class CTree
must have a predefined method <a href="ctreecreateelement.htm"
class="topiclink">CreateElement</a> that creates a new sample of
descendant class <a href="ctreenode.htm" class=
"topiclink">CTreeNode</a>.</span>
</p>

<p class="p_Text"><span class="f_Text">Let's consider an example of
descendant class CTree.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyTree.mq5&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;2010,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.metaquotes.net/&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">copyright</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"2010,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">link</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"https://www.mql5.com"</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#include</span><span class=
"f_CodeExample">&nbsp;&lt;Arrays\Tree.mqh&gt;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#include</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"MyTreeNode.mqh"</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;extCountedNodes&nbsp;=&nbsp;100;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Describe&nbsp;class&nbsp;CMyTree&nbsp;derived&nbsp;from&nbsp;CTree.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Class&nbsp;CMyTree.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Purpose:&nbsp;Construction&nbsp;and&nbsp;navigation&nbsp;of&nbsp;a&nbsp;binary&nbsp;search&nbsp;tree.&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CMyTree&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">public</span><span class=
"f_CodeExample">&nbsp;CTree</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;methods&nbsp;of&nbsp;search&nbsp;on&nbsp;the&nbsp;tree&nbsp;by&nbsp;custom&nbsp;data</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FindByLong(</span><span class="f_CodeExample"
style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;find_long);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;method&nbsp;of&nbsp;creation&nbsp;of&nbsp;the&nbsp;tree&nbsp;element</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">virtual</span><span class=
"f_CodeExample">&nbsp;CTreeNode&nbsp;*CreateElement();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">CMyTree&nbsp;MyTree;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Creation&nbsp;of&nbsp;a&nbsp;new&nbsp;tree&nbsp;node.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;pointer&nbsp;to&nbsp;the&nbsp;new&nbsp;tree&nbsp;node&nbsp;of&nbsp;OK,&nbsp;or&nbsp;NULL.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class=
"f_CodeExample">CTreeNode&nbsp;*CMyTree::CreateElement()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*node=</span><span class="f_CodeExample"
style="color: #0000ff;">new</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(node);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Search&nbsp;of&nbsp;element&nbsp;in&nbsp;a&nbsp;list&nbsp;by&nbsp;value&nbsp;m_long.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;find_long&nbsp;-&nbsp;searched&nbsp;value.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;pointer&nbsp;of&nbsp;a&nbsp;found&nbsp;list&nbsp;element,&nbsp;or&nbsp;NULL.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class=
"f_CodeExample">CMyTreeNode*&nbsp;CMyTree::FindByLong(</span><span class="f_CodeExample"
style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;find_long)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*res=</span><span class="f_CodeExample"
style="color: #0000ff;">NULL</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*node;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;create&nbsp;a&nbsp;tree&nbsp;node&nbsp;to&nbsp;pass&nbsp;the&nbsp;search&nbsp;parameter</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;node=</span><span class=
"f_CodeExample" style="color: #0000ff;">new</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(node==</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;node.SetLong(find_long);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;res=Find(node);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">delete</span><span class=
"f_CodeExample">&nbsp;node;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(res);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;script&nbsp;"testing&nbsp;of&nbsp;class&nbsp;CMyTree"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;&nbsp;array&nbsp;for&nbsp;string&nbsp;initialization</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;str_array[11]={</span><span class=
"f_CodeExample" style="color: #008080;">"p"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"oo"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"iii"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"uuuu"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"yyyyy"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"ttttt"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"rrrr"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"eee"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"ww"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"q"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"999"</span><span class=
"f_CodeExample">};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">export</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beg_time,end_time;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*node;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;temporary&nbsp;pointer&nbsp;to&nbsp;the&nbsp;sample&nbsp;of&nbsp;class&nbsp;CMyTreeNode&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Start&nbsp;test&nbsp;%s."</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">__FILE__</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Fill&nbsp;out&nbsp;MyTree&nbsp;with&nbsp;samples&nbsp;of&nbsp;class&nbsp;MyTreeNode&nbsp;in&nbsp;the&nbsp;amount&nbsp;of&nbsp;extCountedNodes.</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;beg_time=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">GetTickCount</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(i=0;i&lt;extCountedNodes;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node=MyTree.CreateElement();</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(node==</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;emergency&nbsp;exit</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s&nbsp;(%4d):&nbsp;create&nbsp;error"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">__FILE__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NodeSetData(node,i);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.SetLong(i);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyTree.Insert(node);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;end_time=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">GetTickCount</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Filling&nbsp;time&nbsp;of&nbsp;MyTree&nbsp;is&nbsp;%d&nbsp;ms."</span><span class="f_CodeExample">,end_time-beg_time);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Create&nbsp;a&nbsp;temporary&nbsp;tree&nbsp;TmpMyTree.</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTree&nbsp;TmpMyTree;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Detach&nbsp;50%&nbsp;of&nbsp;tree&nbsp;elements&nbsp;(all&nbsp;even)</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;and&nbsp;add&nbsp;them&nbsp;to&nbsp;the&nbsp;temporary&nbsp;tree&nbsp;TmpMyTree.</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;beg_time=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">GetTickCount</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(i=0;i&lt;extCountedNodes;i+=2)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node=MyTree.FindByLong(i);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(node!=</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(MyTree.Detach(node))&nbsp;TmpMyTree.Insert(node);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;end_time=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">GetTickCount</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Deletion&nbsp;time&nbsp;of&nbsp;%d&nbsp;elements&nbsp;from&nbsp;MyTree&nbsp;is&nbsp;%d&nbsp;ms."</span><span class="f_CodeExample">,extCountedNodes/2,end_time-beg_time);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Return&nbsp;the&nbsp;detached</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;node=TmpMyTree.Root();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(node!=</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(TmpMyTree.Detach(node))&nbsp;MyTree.Insert(node);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node=TmpMyTree.Root();</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Check&nbsp;work&nbsp;of&nbsp;method&nbsp;Save(int&nbsp;file_handle);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;file_handle;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;file_handle=</span><span class=
"f_CodeExample" style="color: #0000ff;">FileOpen</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"MyTree.bin"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_WRITE</span><span class=
"f_CodeExample">|</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_BIN</span><span class=
"f_CodeExample">|</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_ANSI</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(file_handle&gt;=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!MyTree.Save(file_handle))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;error&nbsp;writing&nbsp;to&nbsp;a&nbsp;file</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;emergency&nbsp;exit</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s:&nbsp;Error&nbsp;%d&nbsp;in&nbsp;%d!"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">__FILE__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">(),</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;close&nbsp;file&nbsp;before&nbsp;leaving!!!</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">FileClose</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">FileClose</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Check&nbsp;work&nbsp;of&nbsp;method&nbsp;Load(int&nbsp;file_handle);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;file_handle=</span><span class=
"f_CodeExample" style="color: #0000ff;">FileOpen</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"MyTree.bin"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_READ</span><span class=
"f_CodeExample">|</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_BIN</span><span class=
"f_CodeExample">|</span><span class="f_CodeExample" style=
"color: #0000ff;">FILE_ANSI</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(file_handle&gt;=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!TmpMyTree.Load(file_handle))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;error&nbsp;reading&nbsp;from&nbsp;file</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;emergency&nbsp;exit</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s:&nbsp;Error&nbsp;%d&nbsp;in&nbsp;%d!"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">__FILE__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">(),</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;close&nbsp;file&nbsp;before&nbsp;leaving!!!</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">FileClose</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__LINE__</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">FileClose</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;MyTree.Clear();</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;TmpMyTree.Clear();</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"End&nbsp;test&nbsp;%s.&nbsp;OK!"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">__FILE__</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Function&nbsp;of&nbsp;output&nbsp;of&nbsp;node&nbsp;contents&nbsp;to&nbsp;journal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;NodeToLog(CMyTreeNode&nbsp;*node)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;&nbsp;&nbsp;%I64d,%f,'%s','%s'"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.GetLong(),node.GetDouble(),</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.GetString(),</span><span class="f_CodeExample"
style="color: #0000ff;">TimeToString</span><span class=
"f_CodeExample">(node.GetDateTime()));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Function&nbsp;of&nbsp;"filling"&nbsp;of&nbsp;node&nbsp;with&nbsp;random&nbsp;values&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;NodeSetData(CMyTreeNode&nbsp;*node,</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;mode)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(mode%2==0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.SetLong(mode*</span><span class="f_CodeExample"
style="color: #0000ff;">MathRand</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.SetDouble(</span><span class="f_CodeExample"
style="color: #0000ff;">MathPow</span><span class=
"f_CodeExample">(2.02,mode)*</span><span class="f_CodeExample"
style="color: #0000ff;">MathRand</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.SetLong(mode*(</span><span class="f_CodeExample"
style="color: #0000ff;">long</span><span class=
"f_CodeExample">)(-1)*</span><span class="f_CodeExample" style=
"color: #0000ff;">MathRand</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.SetDouble(-</span><span class="f_CodeExample"
style="color: #0000ff;">MathPow</span><span class=
"f_CodeExample">(2.02,mode)*</span><span class="f_CodeExample"
style="color: #0000ff;">MathRand</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;node.SetString(str_array[mode%10]);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;node.SetDateTime(10000*mode);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">&nbsp;</span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
