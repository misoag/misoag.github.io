<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Character Constants</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "symbolconstants.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=symbolconstants.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=symbolconstants.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> / <a class=
"h_m" href="types.htm">Data Types</a> / <a class="h_m" href=
"integer.htm">Integer Types</a> / Character Constants</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="integertypes.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="datetime.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Character Constants</span>
</p>

<p class="p_Text"><span class="f_Text">Characters as elements of a
<a href="stringconst.htm" class="topiclink">string</a> in MQL5 are
indexes in the Unicode character set. They are hexadecimal values
that can be cast into integers, and that can be manipulated by
integer <a href="mathoperation.htm" class=
"topiclink">operations</a> like addition and subtraction.</span>
</p>

<p class="p_Text"><span class="f_Text">Any single character in
quotation marks or a hexadecimal ASCII code of a character as
'\x10' is a character constant and is of <a href=
"integertypes.htm#ushort" class="topiclink">ushort</a> type. For
example, a record of '0' type is a numerical value 30, that
corresponds to the index of zero in the table of characters.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;define&nbsp;character&nbsp;constants</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;symbol_0='0';</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;symbol_9=symbol_0+9;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;get&nbsp;symbol&nbsp;'9'</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;output&nbsp;values&nbsp;of&nbsp;constants&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"In&nbsp;a&nbsp;decimal&nbsp;form:&nbsp;symbol_0&nbsp;=&nbsp;%d,&nbsp;&nbsp;symbol_9&nbsp;=&nbsp;%d"</span><span class="f_CodeExample">,symbol_0,symbol_9);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"In&nbsp;a&nbsp;hexadecimal&nbsp;form:&nbsp;symbol_0&nbsp;=&nbsp;0x%x,&nbsp;&nbsp;symbol_9&nbsp;=&nbsp;0x%x"</span><span class="f_CodeExample">,symbol_0,symbol_9);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;enter&nbsp;constants&nbsp;into&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;test=</span><span class="f_CodeExample"
style="color: #008080;">""</span><span class=
"f_CodeExample">;&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,symbol_0);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,symbol_9);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;this&nbsp;is&nbsp;what&nbsp;they&nbsp;look&nbsp;like&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">A backslash is a control
character for a compiler when dealing with constant strings and
character constants in a source text of a program. Some symbols,
for example a single quote ('), double quotes ("), backslash (\)
and control characters can be represented as a combination of
symbols that start with a backslash (\), according to the below
table:</span>
</p>

<div style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 7px 17px;">
<table class="EnumTable" cellspacing="0" cellpadding="5" border="1"
style=
"border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_EnumHeader"><span class="f_EnumHeader">Character
name</span>
</p>
</td>
<td style=
"vertical-align:top; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_EnumHeader"><span class="f_EnumHeader">Mnemonic code or
image</span>
</p>
</td>
<td style=
"vertical-align:top; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_EnumHeader"><span class="f_EnumHeader">Record in
MQL5</span>
</p>
</td>
<td style=
"vertical-align:top; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_EnumHeader"><span class="f_EnumHeader">Numeric
value</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">new line (line
feed)</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">LF</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\n'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">10</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">horizontal
tab</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">HT</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\t'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">9</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">carriage
return</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">CR</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\r'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">13</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">backslash</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">\</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\\'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">92</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">single quote
&nbsp;</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\''</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">39</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">double quote
&nbsp;</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">"</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\"'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">34</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">hexadecimal
code</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">hhhh</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\xhhhh'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">1 to 4 hexadecimal
characters</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">decimal code</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">d</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">'\d'</span>
</p>
</td>
<td style=
"vertical-align:top; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">decimal number from
0 to 65535</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">If a backslash is followed
by a character other than those described above, result is
undefined.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;declare&nbsp;character&nbsp;constants</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;a='A';</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;b='</span><span class="f_CodeExample" style=
"color: #008000;">$</span><span class="f_CodeExample">';</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;c='©';&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;code&nbsp;0xA9</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;d='\xAE';&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;code&nbsp;of&nbsp;the&nbsp;symbol&nbsp;®</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;output&nbsp;print&nbsp;constants</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(a,b,c,d);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;test=</span><span class="f_CodeExample"
style="color: #008080;">""</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,a);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,b);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,c);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,d);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;represent&nbsp;characters&nbsp;as&nbsp;a&nbsp;number</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;a1=65;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;b1=36;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;c1=169;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;d1=174;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,a1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,b1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,c1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,d1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">As it was mentioned above,
th value of a character constant (or variable) is an index in the
table of characters. Index being an integer, it can be written in
different ways.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;a=0xAE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;the&nbsp;code&nbsp;of&nbsp;®&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;'\xAE'&nbsp;literal</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;b=0x24;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;the&nbsp;code&nbsp;of&nbsp;$&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;'\x24'&nbsp;literal</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;c=0xA9;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;the&nbsp;code&nbsp;of&nbsp;©&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;'\xA9'&nbsp;literal</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;d=0x263A;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;the&nbsp;code&nbsp;of&nbsp;☺&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;'\x263A'&nbsp;literal</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;show&nbsp;values</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(a,b,c,d);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;to&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;test=</span><span class="f_CodeExample"
style="color: #008080;">""</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,a);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,b);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,c);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;replace&nbsp;a&nbsp;character&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,0,d);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;codes&nbsp;of&nbsp;suits</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;a1=0x2660;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;b1=0x2661;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;c1=0x2662;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;d1=0x2663;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;of&nbsp;spades</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,1,a1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;of&nbsp;hearts</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,2,b1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;of&nbsp;diamonds</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,3,c1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;add&nbsp;a&nbsp;character&nbsp;of&nbsp;clubs</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringSetCharacter</span><span class=
"f_CodeExample">(test,4,d1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(test);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Example&nbsp;of&nbsp;character&nbsp;literals&nbsp;in&nbsp;a&nbsp;string</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;test=</span><span class=
"f_CodeExample" style=
"color: #008080;">"Queen\x2660Ace\x2662"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">printf</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s"</span><span class=
"f_CodeExample">,test);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The internal representation
of a character literal is the <a href="integertypes.htm#ushort"
class="topiclink">ushort</a> type. Character constants can accept
values from 0 to 65535.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href=
"stringsetcharacter.htm" class=
"topiclink">StringSetCharacter()</a>, <a href=
"stringgetcharacter.htm" class=
"topiclink">StringGetCharacter()</a>, <a href="shorttostring.htm"
class="topiclink">ShortToString()</a>, <a href=
"shortarraytostring.htm" class=
"topiclink">ShortArrayToString()</a>, <a href=
"stringtoshortarray.htm" class=
"topiclink">StringToShortArray()</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
