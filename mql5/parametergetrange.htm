<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>ParameterGetRange</title>
<meta name="keywords" content="ParameterGetRange">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "parametergetrange.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=parametergetrange.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=parametergetrange.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="optimization_frames.htm">Working with
Optimization Results</a> / ParameterGetRange</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="frameadd.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="parametersetrange.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">ParameterGetRange</span>
</p>

<p class="p_Function"><span class="f_Function">Receives data on the
values range and the change step for an <a href=
"inputvariables.htm" class="topiclink">input variable</a> when
optimizing an Expert Advisor in the Strategy Tester. There are 2
variants of the function.</span>
</p>

<p class="p_Function"><span class="f_Text">1. Receiving data for
the integer type input parameter</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">bool&nbsp;&nbsp;</span><span class=
"f_Functions">ParameterGetRange</span><span class=
"f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">const&nbsp;string</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">name</span><span class=
"f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;(input&nbsp;variable)&nbsp;name</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">bool&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">enable</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;optimization&nbsp;enabled</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">long&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">value</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">long&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">start</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;initial&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">long&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">step</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;change&nbsp;step</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">long&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">stop</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;final&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Function"><span class="f_Text">2. Receiving data for
the real type input parameter</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">bool&nbsp;&nbsp;</span><span class=
"f_Functions">ParameterGetRange</span><span class=
"f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">const&nbsp;string</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">name</span><span class=
"f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;(input&nbsp;variable)&nbsp;name</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">double&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">enable</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;optimization&nbsp;enabled</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">double&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">value</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameter&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">double&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">start</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;initial&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">double&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">step</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;change&nbsp;step</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">double&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">stop</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;final&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class=
"f_BoldTitles">Parameters</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">name</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] <a href="inputvariables.htm" class=
"topiclink">input variable</a> ID. These variables are external
parameters of an application. Their values can be specified when
launching on a chart or during a single test.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">enable</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Flag that this parameter can
be used to enumerate the values during the optimization in the
Strategy Tester.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">value</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Parameter value.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">start</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Initial parameter value during
the optimization.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">step</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Parameter change step when
enumerating its values.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">stop</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Final parameter value during
the optimization.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Returned
value</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">Returns
true if successful, otherwise false. For information about the
error, use the <a href="getlasterror.htm" class=
"topiclink">GetLastError()</a> function.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">The
function can be called&nbsp;only from <a href=
"events.htm#ontesterinit" class="topiclink">OnTesterInit()</a>,
<a href="events.htm#ontesterpass" class=
"topiclink">OnTesterPass()</a> and <a href=
"events.htm#ontesterdeinit" class="topiclink">OnTesterDeinit()</a>
handlers. It has been introduced to receive Expert Advisor input
parameters' values and variation ranges during the optimization in
the Strategy Tester.</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">When
called in OnTesterInit(), the obtained data can be used to redefine
the rules for enumeration of any <a href="inputvariables.htm"
class="topiclink">input variable</a> using <a href=
"parametersetrange.htm" class="topiclink">ParameterSetRange()</a>
function. Therefore, new Start, Stop and Step values can be set and
the input parameter can even be completely excluded from
optimization regardless of the Strategy Tester settings. This
allows you to manage the area of the input parameters during the
optimization by excluding some parameters from the optimization
depending on the Expert Advisor's key parameters' values.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"Expert&nbsp;Advisor&nbsp;for&nbsp;ParameterGetRange()&nbsp;function&nbsp;demonstration."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"Should&nbsp;be&nbsp;launched&nbsp;in&nbsp;the&nbsp;optimization&nbsp;mode&nbsp;of&nbsp;the&nbsp;Strategy&nbsp;Tester"</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;input&nbsp;parameters</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #c0504d;">Input1</span><span class=
"f_CodeExample">=1;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #c0504d;">Input2</span><span class=
"f_CodeExample">=2.0;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #c0504d;">Input3</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_DAY_OF_WEEK</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #c0504d;">Input4</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">SUNDAY</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Expert&nbsp;initialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Expert&nbsp;Advisor&nbsp;is&nbsp;designed&nbsp;for&nbsp;operation&nbsp;only&nbsp;in&nbsp;the&nbsp;Strategy&nbsp;Tester</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5InfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5_OPTIMIZATION</span><span class=
"f_CodeExample">))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">MessageBox</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Should&nbsp;be&nbsp;launched&nbsp;in&nbsp;the&nbsp;optimization&nbsp;mode&nbsp;of&nbsp;the&nbsp;Strategy&nbsp;Tester!"</span><span class="f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;finish&nbsp;the&nbsp;Expert&nbsp;Advisor&nbsp;operation&nbsp;in&nbsp;advance&nbsp;and&nbsp;remove&nbsp;from&nbsp;the&nbsp;chart</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_FAILED</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;successful&nbsp;completion&nbsp;of&nbsp;initialization</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_SUCCEEDED</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;TesterInit&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnTesterInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;example&nbsp;for&nbsp;long&nbsp;type&nbsp;input&nbsp;parameter</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;name=</span><span class="f_CodeExample"
style="color: #008080;">"Input1"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;enable;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;par1,par1_start,par1_step,par1_stop;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ParameterGetRange</span><span class=
"f_CodeExample">(name,enable,par1,par1_start,par1_step,par1_stop);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"First&nbsp;parameter"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s=%d&nbsp;&nbsp;enable=%s&nbsp;&nbsp;from&nbsp;%d&nbsp;to&nbsp;%d&nbsp;with&nbsp;step=%d"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,par1,(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">)enable,par1_start,par1_stop,par1_step);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;example&nbsp;for&nbsp;double&nbsp;type&nbsp;input&nbsp;parameter</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;name=</span><span class=
"f_CodeExample" style="color: #008080;">"Input2"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;par2,par2_start,par2_step,par2_stop;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ParameterGetRange</span><span class=
"f_CodeExample">(name,enable,par2,par2_start,par2_step,par2_stop);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Second&nbsp;parameter"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s=%G&nbsp;&nbsp;enable=%s&nbsp;&nbsp;from&nbsp;%G&nbsp;to&nbsp;%G&nbsp;with&nbsp;step=%G"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,par2,(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">)enable,par2_start,par2_stop,par2_step);</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;example&nbsp;for&nbsp;bool&nbsp;type&nbsp;input&nbsp;parameter</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;name=</span><span class=
"f_CodeExample" style="color: #008080;">"Input3"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;par3,par3_start,par3_step,par3_stop;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ParameterGetRange</span><span class=
"f_CodeExample">(name,enable,par3,par3_start,par3_step,par3_stop);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Third&nbsp;parameter"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s=%s&nbsp;&nbsp;enable=%s&nbsp;&nbsp;from&nbsp;%s&nbsp;to&nbsp;%s"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">)par3,(</span><span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">)enable,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">)par3_start,(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">)par3_stop);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;example&nbsp;for&nbsp;enumeration&nbsp;type&nbsp;input&nbsp;parameter</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;name=</span><span class=
"f_CodeExample" style="color: #008080;">"Input4"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;par4,par4_start,par4_step,par4_stop;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ParameterGetRange</span><span class=
"f_CodeExample">(name,enable,par4,par4_start,par4_step,par4_stop);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Fourth&nbsp;parameter"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s=%s&nbsp;&nbsp;enable=%s&nbsp;&nbsp;from&nbsp;%s&nbsp;to&nbsp;%s"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,</span><span class="f_CodeExample"
style="color: #0000ff;">EnumToString</span><span class=
"f_CodeExample">((</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_DAY_OF_WEEK</span><span class=
"f_CodeExample">)par4),(</span><span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">)enable,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">EnumToString</span><span class=
"f_CodeExample">((</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_DAY_OF_WEEK</span><span class=
"f_CodeExample">)par4_start),</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">EnumToString</span><span class=
"f_CodeExample">((</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_DAY_OF_WEEK</span><span class=
"f_CodeExample">)par4_stop));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;TesterDeinit&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnTesterDeinit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;this&nbsp;message&nbsp;will&nbsp;be&nbsp;shown&nbsp;after&nbsp;optimization&nbsp;is&nbsp;complete</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__FUNCTION__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;Optimization&nbsp;completed"</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
