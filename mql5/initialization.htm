<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Initialization of Variables</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "initialization.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=initialization.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=initialization.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> / <a class=
"h_m" href="variables.htm">Variables</a> / Initialization of
Variables</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="externvariables.htm"><img style="vertical-align:middle;"
src="previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="variable_scope.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Initialization of
Variables</span>
</p>

<p class="p_Text"><span class="f_Text">Any variable can be
initialized during definition. If a variable is not initialized
explicitly, the value stored in this variable can be any. Implicit
initialization is not used.</span>
</p>

<p class="p_Text"><span class="f_Text"><a href="global.htm" class=
"topiclink">Global</a> and <a href="static.htm" class=
"topiclink">static</a> variables can be initialized only by a
constant of the corresponding type or a constant expression.
<a href="local.htm" class="topiclink">Local variables</a> can be
initialized by any expression, not just a constant.</span>
</p>

<p class="p_Text"><span class="f_Text">Initialization of global and
static variables is performed only once. Initialization of local
variables is made every time you call the corresponding
functions.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Examples:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=</span><span class="f_CodeExample"
style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample"
style="color: #339966;">1</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"hello"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;f[]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;{</span><span class="f_CodeExample"
style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample"
style="color: #339966;">0.0</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style=
"color: #339966;">0.236</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style=
"color: #339966;">0.382</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style=
"color: #339966;">0.5</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style=
"color: #339966;">0.618</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style=
"color: #339966;">1.0</span><span class="f_CodeExample" style=
"color: #ffffff;">&nbsp;</span><span class=
"f_CodeExample">};</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;a[4][4]&nbsp;=&nbsp;{&nbsp;{1,&nbsp;1,&nbsp;1,&nbsp;1},&nbsp;{2,&nbsp;2,&nbsp;2,&nbsp;2},&nbsp;{3,&nbsp;3,&nbsp;3,&nbsp;3},&nbsp;{4,&nbsp;4,&nbsp;4,&nbsp;4&nbsp;}&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;from&nbsp;tetris</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;right[</span><span class=
"f_CodeExample" style="color: #339966;">4</span><span class=
"f_CodeExample">]={WIDTH_IN_PIXELS+VERT_BORDER,WIDTH_IN_PIXELS+VERT_BORDER,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WIDTH_IN_PIXELS+VERT_BORDER,WIDTH_IN_PIXELS+VERT_BORDER};</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;initialization&nbsp;of&nbsp;all&nbsp;fields&nbsp;of&nbsp;the&nbsp;structure&nbsp;with&nbsp;zero&nbsp;values</span><br>
<span class="f_CodeExample" style=
"color: #ff00ff;">MqlTradeRequest</span><span class=
"f_CodeExample">&nbsp;request={0};</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">List of values of the array
elements must be enclosed in curly brackets. Missed initializing
sequences are considered equal to 0. The initializing sequence must
have at least one value: this value is initialized to the first
element of the corresponding structure or array, missing elements
are considered equal to zero.</span>
</p>

<p class="p_Text"><span class="f_Text">If the size of the
initialized array is not specified, it is determined by a compiler,
based on the size of the initialization sequence. Multi-dimensional
arrays cannot be initialized by a one-dimensional sequence (a
sequence without additional curly brackets), except for the case,
when only one initializing element is specified (zero, as a
rule).</span>
</p>

<p class="p_Text"><span class="f_Text">Arrays (including those
announced at the local level) can be initialized only by
constants.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Examples:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">struct</span><span class=
"f_CodeExample">&nbsp;str3</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;low_part;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;high_part;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">struct</span><span class=
"f_CodeExample">&nbsp;str10</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;str3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s3;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d1[10];</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i3;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;str10&nbsp;s10_1={{1,0},{1.0,2.1,3.2,4.4,5.3,6.1,7.8,8.7,9.2,10.0},100};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;str10&nbsp;s10_2={{1,0},{0},100};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;str10&nbsp;s10_3={{1,0},{1.0}};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"1.&nbsp;&nbsp;s10_1.d1[5]&nbsp;=&nbsp;"</span><span class="f_CodeExample">,s10_1.d1[5]);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"2.&nbsp;&nbsp;s10_2.d1[5]&nbsp;=&nbsp;"</span><span class="f_CodeExample">,s10_2.d1[5]);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"3.&nbsp;&nbsp;s10_3.d1[5]&nbsp;=&nbsp;"</span><span class="f_CodeExample">,s10_3.d1[5]);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"4.&nbsp;&nbsp;s10_3.d1[0]&nbsp;=&nbsp;"</span><span class="f_CodeExample">,s10_3.d1[0]);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">&nbsp;</span><br>
<span class="f_Text">For structure type variable partial
initialization is allowed, as well as for static arrays (with an
implicitly set size). You can initialize on or more first elements
of a structure or array, the other elements will be initialized
with zeroes in this case.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="types.htm"
class="topiclink">Data Types</a>, <a href="incapsulation.htm"
class="topiclink">Encapsulation and Extensibility of Types</a>,
<a href="variable_scope.htm" class="topiclink">Visibility Scope and
Lifetime of Variables</a>, <a href="object_live.htm" class=
"topiclink">Creating and Deleting Objects</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
