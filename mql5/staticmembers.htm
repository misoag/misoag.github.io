<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Static Members of a Class</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "staticmembers.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=staticmembers.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=staticmembers.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> / <a class=
"h_m" href="oop.htm">Object-Oriented Programming</a> / Static
Members of a Class</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="virtual.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="templates.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Static members of a
Class/Structure</span>
</p>

<p class="p_H2"><span class="f_H2">Static Members</span>
</p>

<p class="p_Text"><span class="f_Text">The members of a class can
be declared using the storage class modifier <a href="static.htm"
class="topiclink">static</a>. These data members are shared by all
instances of this class and are stored in one place. Non-static
data members are created for each class object variable.</span>
</p>

<p class="p_Text"><span class="f_Text">The inability to declare
static members of a class would have led to the need to declare
these data on the <a href="global.htm" class="topiclink">the global
level</a> of the program. It would break the relationship between
the data and their class, and is not consistent with the basic
paradigm of the OOP - joining data and methods for handling them in
a class. The static member allows class data that are not specific
to a particular instance to exist in the class scope.</span>
</p>

<p class="p_Text"><span class="f_Text">Since a static class member
does not depend on the particular instance, the reference to it is
as follows:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">class_name::variable</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">where</span> <span class=
"f_Text" style="font-style: italic;">class_name</span> <span class=
"f_Text">is the name of the class, and</span> <span class="f_Text"
style="font-style: italic;">variable</span> <span class="f_Text">is
the name of the class member.</span></p>

<p class="p_Text"><span class="f_Text">As you see, to access the
static member of a class, <a href="other.htm#context_allow" class=
"topiclink">context resolution operator ::</a> is used. When you
access a static member within class methods, the context operator
is optional.</span>
</p>

<p class="p_Text"><span class="f_Text">Static member of a class has
to be explicitly initialized with desired value. For this it must
be declared and initialized in global scope. The sequence of static
members initialization will correspond to the sequence of their
declaration in global scope.</span>
</p>

<p class="p_Text"><span class="f_Text">For example, we have a
class</span> <span class="f_Text" style=
"font-style: italic;">CParser</span> <span class="f_Text">used for
parsing the text, and we need to count the total number of
processed words and characters. We only need to declare the
necessary class members as static and initialize them at the global
level. Then all instances of the class will use common counters of
words and characters.</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Class&nbsp;"Text&nbsp;analyzer"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CParser</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s_words;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s_symbols;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #999999;">//---&nbsp;Constructor&nbsp;and&nbsp;destructor</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parser(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~Parser(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">){};</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample">...</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;Initialization&nbsp;of&nbsp;static&nbsp;members&nbsp;of&nbsp;the&nbsp;Parser&nbsp;class&nbsp;at&nbsp;the&nbsp;global&nbsp;level</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CParser::s_words=0;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CParser::s_symbols=0;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">A static class member can be
declared with the</span> <span class="f_Text" style=
"font-style: italic;">const</span> <span class="f_Text">keyword.
Such static constants must be initialized at the global level with
the</span> <span class="f_Text" style=
"font-style: italic;">const</span> <span class=
"f_Text">keyword:</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Class&nbsp;"Stack"&nbsp;for&nbsp;storing&nbsp;processed&nbsp;data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CStack</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CStack(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~CStack(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">){};</span><br>
<span class="f_CodeExample">...</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">private</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;s_max_length;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #999999;">//&nbsp;Maximum&nbsp;stack&nbsp;capacity</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;Initialization&nbsp;of&nbsp;the&nbsp;static&nbsp;constant&nbsp;of&nbsp;the&nbsp;CStack&nbsp;class</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CStack::s_max_length=1000;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_H2"><a class="help" name="this" id=
"this"></a><span class="f_H2">Pointer this</span>
</p>

<p class="p_Text"><span class="f_Text">The keyword <a href=
"this.htm" class="topiclink">this</a> denotes an implicitly
declared <a href="object_pointers.htm" class=
"topiclink">pointer</a> to itself  to a specific instance of the
class, in the context of which the method is executed. It can be
used only in non-static methods of the class. Pointer this is an
implicit non-static member of any class.</span>
</p>

<p class="p_Text"><span class="f_Text">In static functions you can
access only static members/methods of a class.</span>
</p>

<p class="p_H2"><span class="f_H2">Static Methods</span>
</p>

<p class="p_Text"><span class="f_Text">In MQL5 member functions of
type <a href="static.htm" class="topiclink">static</a> can be used.
The</span> <span class="f_Text" style=
"font-style: italic;">static</span> <span class="f_Text">modifier
must precede the return type of a function in the declaration
inside a class.</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CStack</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;Constructor&nbsp;and&nbsp;destructor</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CStack(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">){};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~CStack(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">){};</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;Maximum&nbsp;stack&nbsp;capacity</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Capacity();</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">private</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_length;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;The&nbsp;number&nbsp;of&nbsp;elements&nbsp;in&nbsp;the&nbsp;stack</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;s_max_length;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;Maximum&nbsp;stack&nbsp;capacity</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Returns&nbsp;the&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;to&nbsp;store&nbsp;in&nbsp;the&nbsp;stack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CStack::Capacity(</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(s_max_length);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Initialization&nbsp;of&nbsp;the&nbsp;static&nbsp;constant&nbsp;of&nbsp;the&nbsp;CStack&nbsp;class</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CStack::s_max_length=1000;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;declare&nbsp;CStack&nbsp;type&nbsp;variable</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CStack&nbsp;stack;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;call&nbsp;the&nbsp;object's&nbsp;static&nbsp;method</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"CStack.s_max_length="</span><span class=
"f_CodeExample">,stack.Capacity());</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;it&nbsp;can&nbsp;also&nbsp;be&nbsp;called&nbsp;the&nbsp;following&nbsp;way,&nbsp;as&nbsp;the&nbsp;method&nbsp;is&nbsp;static&nbsp;and&nbsp;does&nbsp;not&nbsp;require&nbsp;the&nbsp;presence&nbsp;of&nbsp;the&nbsp;object&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"CStack.s_max_length="</span><span class=
"f_CodeExample">,CStack::Capacity());</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><a class="help" name="const" id=
"const"></a><span class="f_Text">A method with the</span>
<span class="f_Text" style="color: #0000ff;">const</span>
<span class="f_Text">modifier is called constant and cannot modify
implicit members of its class. Declaration of constant functions of
a class and constant parameters is called</span> <span class=
"f_Text" style="font-style: italic;">const-correctness</span>
<span class="f_Text">control. Through this control you can be sure
that the compiler will ensure the consistency of values of objects
and will return an error during compilation if there is something
wrong.</span></p>

<p class="p_Text"><span class="f_Text">The</span> <span class=
"f_Text" style="color: #0000ff;">const</span> <span class=
"f_Text">modifier is placed after the list of arguments inside a
class declaration. Definition outside a class should also include
the</span> <span class="f_Text" style=
"font-style: italic;">const</span> <span class=
"f_Text">modifier:</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Class&nbsp;"Rectangle"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CRectangle</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">private</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_width;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #999999;">//&nbsp;Width&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_height;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #999999;">//&nbsp;Height</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #999999;">//---&nbsp;Constructors&nbsp;and&nbsp;destructor</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CRectangle(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">):m_width(0),m_height(0){};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CRectangle(</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;w,</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;h):m_width(w),m_height(h){};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~CRectangle(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">){};</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #999999;">//---&nbsp;Calculating&nbsp;the&nbsp;area</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Square(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Square(</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;w,</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;h);</span><span class="f_CodeExample" style=
"color: #999999;">//&nbsp;{&nbsp;return(w*h);&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Returns&nbsp;the&nbsp;area&nbsp;of&nbsp;the&nbsp;"Rectangle"&nbsp;object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;CRectangle::Square(</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(Square(m_width,m_height));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Returns&nbsp;the&nbsp;product&nbsp;of&nbsp;two&nbsp;variables&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">static</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;CRectangle::Square(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;w,</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;h)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(w*h);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;Create&nbsp;a&nbsp;rectangle&nbsp;rect&nbsp;with&nbsp;the&nbsp;sides&nbsp;equal&nbsp;to&nbsp;5&nbsp;and&nbsp;6</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CRectangle&nbsp;rect(5,6);</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;Find&nbsp;the&nbsp;rectangle&nbsp;area&nbsp;using&nbsp;a&nbsp;constant&nbsp;method</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"rect.Square()=%.2f"</span><span class=
"f_CodeExample">,rect.Square());</span><br>
<span class="f_CodeExample" style=
"color: #999999;">//---&nbsp;Find&nbsp;the&nbsp;product&nbsp;of&nbsp;numbers&nbsp;using&nbsp;the&nbsp;static&nbsp;method&nbsp;of&nbsp;class&nbsp;CRectangle</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"CRectangle::Square(2.0,1.5)=%f"</span><span class="f_CodeExample">,CRectangle::Square(2.0,1.5));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">An additional argument in
favor of using the constancy control is the fact that in this case,
the compiler generates a special optimization, for example, places
a constant object</span> <span class="f_Text">in read-only
memory.</span></p>

<p class="p_Text"><span class="f_Text">A static function cannot be
determined with the</span> <span class="f_Text" style=
"color: #0000ff;">const</span> <span class="f_Text">modifier,
because this modifier ensures the constancy of the instance members
when calling this function. But, as mentioned above, the static
function cannot access non-static class members.</span></p>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="static.htm"
class="topiclink">Static Variables</a>, <a href=
"variables.htm#const" class="topiclink">Variables</a>, <a href=
"this.htm" class="topiclink">References. Modifier &amp; and Keyword
this</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
