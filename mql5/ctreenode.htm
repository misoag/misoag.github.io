<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>CTreeNode</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "ctreenode.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=ctreenode.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=ctreenode.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="standardlibrary.htm">Standard Library</a> /
<a class="h_m" href="datastructures.htm">Classes of data</a> /
CTreeNode</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="clisttype.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="ctreenodeowner.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">CTreeNode</span>
</p>

<p class="p_Text"><span class="f_Text">Class CTreeNode is a class
of node of the binary tree CTree.</span>
</p>

<p class="p_Text"><span class="f_H3">Description</span>
</p>

<p class="p_Text"><span class="f_Text">Class CTreeNode provides the
ability to work with nodes of the binary tree <a href="ctree.htm"
class="topiclink">CTree</a>. Options of navigation through the tree
is implemented in the class. Besides that methods of work with a
file are implemented.</span>
</p>

<p class="p_Text"><span class="f_H3">Declaration</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CTreeNode&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">public</span><span class=
"f_CodeExample">&nbsp;CObject</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_H3">Title</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">&nbsp;&nbsp;&nbsp;#include</span><span class=
"f_CodeExample">&nbsp;&lt;Arrays\TreeNode.mqh&gt;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_H3"><span class="f_H3">Class Methods</span>
</p>

<div style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 7px 17px;">
<table class="EnumTable" cellspacing="0" cellpadding="5" border="1"
style=
"border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Attributes</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodeowner.htm" class="topiclink">Owner</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets/sets the
pointer of the owner node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodeleft.htm" class="topiclink">Left</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets/sets the
pointer of the left node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenoderight.htm" class="topiclink">Right</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets/sets the
pointer of the right node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodebalance.htm" class="topiclink">Balance</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets the node
balance</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodebalancel.htm" class="topiclink">BalanceL</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets the balance of
the left sub-branch of the node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodebalancer.htm" class="topiclink">BalanceR</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets the balance of
the right sub-branch of the node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Creation of a new element</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodecreatesample.htm" class=
"topiclink">CreateSample</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Creates a new node
instance</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Comparison</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenoderefreshbalance.htm" class=
"topiclink">RefreshBalance</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Recalculates the
node balance</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Search</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodegetnext.htm" class="topiclink">GetNext</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets the pointer of
the next node</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable" style=
"font-weight: bold;">Input/Output</span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; background-color:#dbe9f9; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">&nbsp;</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodesavenode.htm" class="topiclink">SaveNode</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Saves the node data
to a file</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable"><a href=
"ctreenodeloadnode.htm" class="topiclink">LoadNode</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Downloads the node
data from a file</span>
</p>
</td>
</tr>

<tr style="text-align:left;vertical-align:top;">
<td style=
"vertical-align:top; width:200px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">virtual <a href=
"ctreenodetype.htm" class="topiclink">Type</a></span>
</p>
</td>
<td style=
"vertical-align:top; width:632px; padding:5px; border:solid 1px #b1c2d6;">
<p class="p_fortable"><span class="f_fortable">Gets the identifier
of the node type</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Derived classes:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 17px; margin: 3px 17px 3px 17px;">
<li><span class="f_li"><a href="ctree.htm" class=
"topiclink">CTree</a></span>
</li>
</ul>

<p class="p_Text"><span class="f_Text">Trees of CTreeNode class
descendants get practical application.</span>
</p>

<p class="p_Text"><span class="f_Text">A descendant of class
CTreeNode must have predefined methods: <a href=
"ctreenodecreatesample.htm" class="topiclink">CreateSample</a> that
creates a new instance of the descendant class of CTreeNode,
<a href="cobjectcompare.htm" class="topiclink">Compare</a> that
compares values of key fields of the descendant class of CTreeNode,
<a href="cobjecttype.htm" class="topiclink">Type</a> (if it's
necessary to identify a node), <a href="ctreenodesavenode.htm"
class="topiclink">SaveNode</a> and <a href="ctreenodeloadnode.htm"
class="topiclink">LoadNode</a> (if it's necessary to work with a
file).</span>
</p>

<p class="p_Text"><span class="f_Text">Let's consider and example
of a CTree descendant class.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyTreeNode.mq5&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;2010,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.metaquotes.net/&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">copyright</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"2010,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">link</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"https://www.mql5.com"</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#include</span><span class=
"f_CodeExample">&nbsp;&lt;Arrays\TreeNode.mqh&gt;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Describe&nbsp;classderived&nbsp;from&nbsp;CTreeNode.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Class&nbsp;CMyTreeNode.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Purpose:&nbsp;Class&nbsp;of&nbsp;element&nbsp;of&nbsp;a&nbsp;binary&nbsp;tree.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Descendant&nbsp;of&nbsp;class&nbsp;CTreeNode.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">class</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">public</span><span class=
"f_CodeExample">&nbsp;CTreeNode</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">protected</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;user's&nbsp;data</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_long;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;key&nbsp;field&nbsp;of&nbsp;type&nbsp;long</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_double;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;double</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_string;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_datetime;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;datetime</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">public</span><span class=
"f_CodeExample">:</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMyTreeNode();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;methods&nbsp;of&nbsp;accessing&nbsp;these&nbsp;user's&nbsp;data</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetLong(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(m_long);&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetLong(</span><span class="f_CodeExample"
style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;value)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;m_long=value;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetDouble(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(m_double);&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetDouble(</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;value)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;m_double=value;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetString(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(m_string);&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetString(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;value)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;m_string=value;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetDateTime(</span><span class="f_CodeExample"
style="color: #0000ff;">void</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(m_datetime);&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetDateTime(</span><span class="f_CodeExample"
style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;value)&nbsp;&nbsp;{&nbsp;m_datetime=value;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;methods&nbsp;of&nbsp;working&nbsp;with&nbsp;files</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">virtual</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Save(</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;file_handle);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">virtual</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Load(</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;file_handle);</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">protected</span><span class=
"f_CodeExample">:</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">virtual</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compare(</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;CObject&nbsp;*node,</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;mode);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;methods&nbsp;of&nbsp;creating&nbsp;class&nbsp;instances</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">virtual</span><span class=
"f_CodeExample">&nbsp;CTreeNode*&nbsp;CreateSample();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;CMyTreeNode&nbsp;class&nbsp;constructor.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode::CMyTreeNode()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;initialization&nbsp;of&nbsp;user's&nbsp;data</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_double&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=0.0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_string&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=</span><span class="f_CodeExample"
style="color: #008080;">""</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_datetime&nbsp;&nbsp;&nbsp;&nbsp;=0;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Comparison&nbsp;with&nbsp;another&nbsp;three&nbsp;node&nbsp;by&nbsp;the&nbsp;specified&nbsp;algorithm.&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;node&nbsp;-&nbsp;array&nbsp;element&nbsp;to&nbsp;compare,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mode&nbsp;-&nbsp;identifier&nbsp;of&nbsp;comparison&nbsp;algorithm.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;result&nbsp;of&nbsp;comparison&nbsp;(&gt;0,0,&lt;0).&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode::Compare(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;CObject&nbsp;*node,</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;mode)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;parameter&nbsp;mode&nbsp;is&nbsp;ignored,&nbsp;because&nbsp;tree&nbsp;construction&nbsp;algorithm&nbsp;is&nbsp;the&nbsp;only&nbsp;one</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;res=0;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;explicit&nbsp;type&nbsp;casting</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*n=node;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;res=(</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">)(m_long-n.m_long);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(res);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Creation&nbsp;of&nbsp;a&nbsp;new&nbsp;class&nbsp;instance.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;pointer&nbsp;to&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;class&nbsp;CMyTreeNode.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class=
"f_CodeExample">CTreeNode*&nbsp;CMyTreeNode::CreateSample()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;CMyTreeNode&nbsp;*result=</span><span class="f_CodeExample"
style="color: #0000ff;">new</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(result);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Write&nbsp;tree&nbsp;node&nbsp;data&nbsp;to&nbsp;a&nbsp;file.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;file_handle&nbsp;-handle&nbsp;of&nbsp;a&nbsp;file&nbsp;pre-opened&nbsp;for&nbsp;writing.&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;true&nbsp;if&nbsp;OK,&nbsp;otherwise&nbsp;false.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode::Save(</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;file_handle)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;i=0,len;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;checks</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(file_handle&lt;0)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;writing&nbsp;user&nbsp;data</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;writing&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;long</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">FileWriteLong</span><span class=
"f_CodeExample">(file_handle,m_long)!=</span><span class=
"f_CodeExample" style="color: #0000ff;">sizeof</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;writing&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;double</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">FileWriteDouble</span><span class=
"f_CodeExample">(file_handle,m_double)!=</span><span class=
"f_CodeExample" style="color: #0000ff;">sizeof</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">))&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;writing&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;string</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;len=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringLen</span><span class="f_CodeExample">(m_string);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;write&nbsp;string&nbsp;length</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">FileWriteInteger</span><span class=
"f_CodeExample">(file_handle,len,INT_VALUE)!=INT_VALUE)&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;write&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(len!=0&nbsp;&amp;&amp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileWriteString</span><span class=
"f_CodeExample">(file_handle,m_string,len)!=len)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;writing&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;datetime</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">FileWriteLong</span><span class=
"f_CodeExample">(file_handle,m_datetime)!=</span><span class=
"f_CodeExample" style="color: #0000ff;">sizeof</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Read&nbsp;tree&nbsp;node&nbsp;data&nbsp;from&nbsp;a&nbsp;file.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;INPUT:&nbsp;&nbsp;file_handle&nbsp;-handle&nbsp;of&nbsp;a&nbsp;file&nbsp;pre-opened&nbsp;for&nbsp;reading.&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;OUTPUT:&nbsp;true&nbsp;if&nbsp;OK,&nbsp;otherwise&nbsp;false.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;REMARK:&nbsp;none.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;CMyTreeNode::Load(</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;file_handle)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;i=0,len;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;checks</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(file_handle&lt;0)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">FileIsEnding</span><span class=
"f_CodeExample">(file_handle))&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;char</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;long</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_long=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileReadLong</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;double</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_double=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileReadDouble</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;string</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;read&nbsp;the&nbsp;string&nbsp;length</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;len=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileReadInteger</span><span class=
"f_CodeExample">(file_handle,INT_VALUE);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;read&nbsp;the&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(len!=0)&nbsp;m_string=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileReadString</span><span class=
"f_CodeExample">(file_handle,len);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_string=</span><span class="f_CodeExample"
style="color: #008080;">""</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reading&nbsp;custom&nbsp;variable&nbsp;of&nbsp;type&nbsp;datetime</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;m_datetime=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">FileReadLong</span><span class=
"f_CodeExample">(file_handle);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">&nbsp;</span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
