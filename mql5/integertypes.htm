<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Char, Short, Int and Long Types</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "integertypes.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=integertypes.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=integertypes.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> / <a class=
"h_m" href="types.htm">Data Types</a> / <a class="h_m" href=
"integer.htm">Integer Types</a> / Char, Short, Int and Long
Types</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="integer.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="symbolconstants.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Char, Short, Int and Long
Types</span>
</p>

<p class="p_H2"><a class="help" name="char" id=
"char"></a><span class="f_H2">char</span>
</p>

<p class="p_Text"><span class="f_Text">The</span> <span class=
"f_Text" style="font-style: italic;">char</span> <span class=
"f_Text">type takes 1 byte of memory (8 bits) and allows expressing
in the binary notation 2^8=256 values. The</span> <span class=
"f_Text" style="font-style: italic;">char</span> <span class=
"f_Text">type can contain both positive and negative values. The
range of values is from -128 to 127.</span></p>

<p class="p_H2"><a class="help" name="uchar" id=
"uchar"></a><span class="f_H2">uchar</span>
</p>

<p class="p_Text"><span class="f_Text">The</span> <span class=
"f_Text" style="font-style: italic;">uchar</span> <span class=
"f_Text">integer type also occupies 1 byte of memory, as well as
the</span> <span class="f_Text" style=
"font-style: italic;">char</span> <span class="f_Text">type, but
unlike it</span> <span class="f_Text" style=
"font-style: italic;">uchar</span> <span class="f_Text">is intended
only for positive values. The minimum value is zero, the maximum
value is 255. The first letter u in the name of the</span>
<span class="f_Text" style="font-style: italic;">uchar</span>
<span class="f_Text">type is the abbreviation for</span>
<span class="f_Text" style=
"font-style: italic;">unsigned</span><span class=
"f_Text">.</span></p>

<p class="p_H2"><a class="help" name="short" id=
"short"></a><span class="f_H2">short</span>
</p>

<p class="p_Text"><span class="f_Text">The size of the</span>
<span class="f_Text" style="font-style: italic;">short</span>
<span class="f_Text">type is 2 bytes (16 bits) and, accordingly, it
allows expressing the range of values equal to 2 to the power 16:
2^16 = 65 536.Since the</span> <span class="f_Text" style=
"font-style: italic;">short</span> <span class="f_Text">type is a
sign one, and contains both positive and negative values, the range
of values is between -32 768 and 32 767.</span></p>

<p class="p_H2"><a class="help" name="ushort" id=
"ushort"></a><span class="f_H2">ushort</span>
</p>

<p class="p_Text"><span class="f_Text">The unsigned</span>
<span class="f_Text" style="font-style: italic;">short</span>
<span class="f_Text">type is the type</span> <span class="f_Text"
style="font-style: italic;">ushort</span><span class="f_Text">,
which also has a size of 2 bytes. The minimum value is 0, the
maximum value is 65 535.</span></p>

<p class="p_H2"><a class="help" name="int" id=
"int"></a><span class="f_H2">int</span>
</p>

<p class="p_Text"><span class="f_Text">The size of the</span>
<span class="f_Text" style="font-style: italic;">int</span>
<span class="f_Text">type is 4 bytes (32 bits). The minimal value
is -2 147 483 648, the maximal one is 2 147 483 647.</span></p>

<p class="p_H2"><a class="help" name="uint" id=
"uint"></a><span class="f_H2">uint</span>
</p>

<p class="p_Text"><span class="f_Text">The unsigned integer type
is</span> <span class="f_Text" style=
"font-style: italic;">uint</span><span class="f_Text">. It takes 4
bytes of memory and allows expressing integers from 0 to 4 294 967
295.</span></p>

<p class="p_H2"><a class="help" name="long" id=
"long"></a><span class="f_H2">long</span>
</p>

<p class="p_Text"><span class="f_Text">The size of the</span>
<span class="f_Text" style="font-style: italic;">long</span>
<span class="f_Text">type is 8 bytes (64 bits). The minimum value
is -9 223 372 036 854 775 808, the maximum value is 9 223 372 036
854 775 807.</span></p>

<p class="p_H2"><a class="help" name="ulong" id=
"ulong"></a><span class="f_H2">ulong</span>
</p>

<p class="p_Text"><span class="f_Text">The</span> <span class=
"f_Text" style="font-style: italic;">ulong</span> <span class=
"f_Text">type also occupies 8 bytes and can store values from 0 to
18 446 744 073 709 551 615.</span></p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Examples:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">char</span><span class=
"f_CodeExample">&nbsp;&nbsp;ch=</span><span class="f_CodeExample"
style="color: #008080;">12</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">short</span><span class=
"f_CodeExample">&nbsp;sh=-</span><span class="f_CodeExample" style=
"color: #008080;">5000</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;in=</span><span class=
"f_CodeExample" style="color: #008080;">2445777</span><span class=
"f_CodeExample">;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Since the unsigned integer
types are not designed for storing negative values, the attempt to
set a negative value can lead to unexpected consequences. Such a
simple script will lead to an infinite loop:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Infinite&nbsp;loop</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">uchar</span><span class=
"f_CodeExample">&nbsp;&nbsp;u_ch;</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">char</span><span class=
"f_CodeExample">&nbsp;ch=-128;ch&lt;128;ch++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u_ch=ch;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"ch&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,ch,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;u_ch&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,u_ch);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The correct variant
is:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Correct&nbsp;variant</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">uchar</span><span class=
"f_CodeExample">&nbsp;&nbsp;u_ch;</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">char</span><span class=
"f_CodeExample">&nbsp;ch=-128;ch&lt;=127;ch++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u_ch=ch;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"ch&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,ch,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;u_ch&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,u_ch);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ch==127)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Result:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-128&nbsp;&nbsp;u_ch=&nbsp;128</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-127&nbsp;&nbsp;u_ch=&nbsp;129</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-126&nbsp;&nbsp;u_ch=&nbsp;130</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-125&nbsp;&nbsp;u_ch=&nbsp;131</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-124&nbsp;&nbsp;u_ch=&nbsp;132</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-123&nbsp;&nbsp;u_ch=&nbsp;133</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-122&nbsp;&nbsp;u_ch=&nbsp;134</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-121&nbsp;&nbsp;u_ch=&nbsp;135</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-120&nbsp;&nbsp;u_ch=&nbsp;136</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-119&nbsp;&nbsp;u_ch=&nbsp;137</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-118&nbsp;&nbsp;u_ch=&nbsp;138</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-117&nbsp;&nbsp;u_ch=&nbsp;139</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-116&nbsp;&nbsp;u_ch=&nbsp;140</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-115&nbsp;&nbsp;u_ch=&nbsp;141</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-114&nbsp;&nbsp;u_ch=&nbsp;142</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-113&nbsp;&nbsp;u_ch=&nbsp;143</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-112&nbsp;&nbsp;u_ch=&nbsp;144</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ch=&nbsp;-111&nbsp;&nbsp;u_ch=&nbsp;145</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Examples:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;Negative&nbsp;values&nbsp;can&nbsp;not&nbsp;be&nbsp;stored&nbsp;in&nbsp;unsigned&nbsp;types</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">uchar</span><span class=
"f_CodeExample">&nbsp;&nbsp;u_ch=-</span><span class=
"f_CodeExample" style="color: #008080;">120</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">ushort</span><span class=
"f_CodeExample">&nbsp;u_sh=-</span><span class="f_CodeExample"
style="color: #008080;">5000</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;u_in=-</span><span class=
"f_CodeExample" style="color: #008080;">401280</span><span class=
"f_CodeExample">;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Hexadecimal: numbers 0-9,
the letters a-f or A-F for the values of 10-15; start with 0x or
0X.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Examples:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #008080;">0x0A</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0x12</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0X12</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0x2f</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0xA3</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0Xa3</span><span class=
"f_CodeExample">,&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">0X7C7</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">For integer variables, the
values can be set in binary form using B prefix. For example, you
can encode the working hours of a trading session into</span>
<span class="f_Text" style="color: #0000ff;">int</span>
<span class="f_Text">type variable and use information about them
according to the required algorithm:</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;1&nbsp;for&nbsp;working&nbsp;hours&nbsp;and&nbsp;0&nbsp;for&nbsp;nonworking&nbsp;ones</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;AsianSession&nbsp;&nbsp;&nbsp;=</span><span class="f_CodeExample"
style="color: #008080;">B'111111111'</span><span class=
"f_CodeExample">;&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;Asian&nbsp;session&nbsp;from&nbsp;0:00&nbsp;to&nbsp;9:00</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;EuropeanSession=</span><span class=
"f_CodeExample" style=
"color: #008080;">B'111111111000000000'</span><span class=
"f_CodeExample">;&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;European&nbsp;session&nbsp;9:00&nbsp;-&nbsp;18:00</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;AmericanSession&nbsp;=</span><span class=
"f_CodeExample" style=
"color: #008080;">B'111111110000000000000011'</span><span class=
"f_CodeExample">;&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;American&nbsp;session&nbsp;16:00&nbsp;-&nbsp;02:00</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;derive&nbsp;numerical&nbsp;values&nbsp;of&nbsp;the&nbsp;sessions</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Asian&nbsp;session&nbsp;hours&nbsp;as&nbsp;value&nbsp;=%d"</span><span class="f_CodeExample">,AsianSession);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"European&nbsp;session&nbsp;hours&nbsp;as&nbsp;value&nbsp;is&nbsp;%d"</span><span class="f_CodeExample">,EuropeanSession);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"American&nbsp;session&nbsp;hours&nbsp;as&nbsp;value&nbsp;is&nbsp;%d"</span><span class="f_CodeExample">,AmericanSession);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;and&nbsp;now&nbsp;let's&nbsp;display&nbsp;string&nbsp;representations&nbsp;of&nbsp;the&nbsp;sessions'&nbsp;working&nbsp;hours</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Asian&nbsp;session&nbsp;"</span><span class=
"f_CodeExample">,GetHoursForSession(AsianSession));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"European&nbsp;session&nbsp;"</span><span class=
"f_CodeExample">,GetHoursForSession(EuropeanSession));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"American&nbsp;session&nbsp;"</span><span class=
"f_CodeExample">,GetHoursForSession(AmericanSession));&nbsp;&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;return&nbsp;the&nbsp;session's&nbsp;working&nbsp;hours&nbsp;as&nbsp;a&nbsp;string&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;GetHoursForSession(</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;session)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;in&nbsp;order&nbsp;to&nbsp;check,&nbsp;use&nbsp;AND&nbsp;bit&nbsp;operations&nbsp;and&nbsp;left&nbsp;shift&nbsp;by&nbsp;1&nbsp;bit&nbsp;&lt;&lt;=1</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;start&nbsp;checking&nbsp;from&nbsp;the&nbsp;lowest&nbsp;bit</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;bit=1;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;out=</span><span class="f_CodeExample" style=
"color: #008080;">"working&nbsp;hours:&nbsp;"</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;all&nbsp;24&nbsp;bits&nbsp;starting&nbsp;from&nbsp;the&nbsp;zero&nbsp;and&nbsp;up&nbsp;to&nbsp;23&nbsp;inclusively&nbsp;&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=0;i&lt;24;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;receive&nbsp;bit&nbsp;state&nbsp;in&nbsp;number</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;workinghour=(session&amp;bit)==bit;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;add&nbsp;the&nbsp;hour's&nbsp;number&nbsp;to&nbsp;the&nbsp;message</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(workinghour&nbsp;)out=out+</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%d&nbsp;"</span><span class=
"f_CodeExample">,i);&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;shift&nbsp;by&nbsp;one&nbsp;bit&nbsp;to&nbsp;the&nbsp;left&nbsp;to&nbsp;check&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;next&nbsp;one</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bit&lt;&lt;=1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;result&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">&nbsp;out;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class="f_BoldTitles">&nbsp;</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="casting.htm"
class="topiclink">Typecasting</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
