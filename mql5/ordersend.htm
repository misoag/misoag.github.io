<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>OrderSend</title>
<meta name="keywords" content="OrderSend">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "ordersend.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=ordersend.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=ordersend.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="trading.htm">Trade Functions</a> /
OrderSend</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="ordercheck.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="ordersendasync.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">OrderSend</span>
</p>

<p class="p_Function"><span class="f_Function">The OrderSend()
function is used for executing <a href=
"enum_trade_request_actions.htm" class="topiclink">trade
operations</a> by sending <a href="mqltraderequest.htm" class=
"topiclink">requests</a> to a trade server.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">bool&nbsp;&nbsp;</span><span class=
"f_Functions">OrderSend</span><span class=
"f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">MqlTradeRequest&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">request</span><span class="f_Param" style=
"color: #000000;">,</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;query&nbsp;structure</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">MqlTradeResult&amp;&nbsp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">result&nbsp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;structure&nbsp;of&nbsp;the&nbsp;answer</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class=
"f_BoldTitles">Parameters</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">request</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Pointer to a structure of
<a href="mqltraderequest.htm" class="topiclink">MqlTradeRequest</a>
type describing the trade activity of the client.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">result</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in,out] &nbsp;Pointer to a structure of
<a href="mqltraderesult.htm" class="topiclink">MqlTradeResult</a>
type describing the result of trade operation in case of a
successful completion (if true is returned).</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Return
Value</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">In case
of a successful basic check of structures (index checking) returns
true.</span> <span class="f_FunctionRemark" style=
"font-weight: bold;">However,</span> <span class="f_FunctionRemark"
style="font-weight: bold;">this is not a sign of successful
execution of a trade operation</span><span class=
"f_FunctionRemark">. For a more detailed description of the
function execution result, analyze the fields of</span>
<span class="f_FunctionRemark" style=
"font-style: italic;">result</span> <span class=
"f_FunctionRemark">structure.</span></p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">The
trade requests go through several stages of checking on a trade
server. First of all, it checks if all the required fields of
the</span> <span class="f_FunctionRemark" style=
"font-style: italic;">request</span> <span class=
"f_FunctionRemark">parameter are filled out correctly. If there are
no errors, the server accepts the order for further processing. If
the order is successfully accepted by the trade server, the
OrderSend() function returns true.</span></p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">It is
recommended to check the request before sending it to a trade
server. To check requests, use the <a href="ordercheck.htm" class=
"topiclink">OrderCheck()</a> function. It checks if there are
enough funds to execute the trade operation, and returns many
useful parameters in the <a href="mqltradecheckresult.htm" class=
"topiclink">results of trade request checking</a>:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 24px; margin: 1px 17px 1px 24px;">
<li><span class="f_FunctionRemLI"><a href=
"enum_trade_return_codes.htm" class="topiclink">return code</a>
containing information about errors in the checked request;</span>
</li>

<li><span class="f_FunctionRemLI">balance value that will appear
after the trade operation is executed;</span>
</li>

<li><span class="f_FunctionRemLI">equity value that will appear
after the trade operation is executed;</span>
</li>

<li><span class="f_FunctionRemLI">floating point value that will
appear after the trade operation is executed;</span>
</li>

<li><span class="f_FunctionRemLI">margin required for the trade
operation;</span>
</li>

<li><span class="f_FunctionRemLI">amount of free equity that will
remain after the execution of the trade operation;</span>
</li>

<li><span class="f_FunctionRemLI">the margin level that will be set
after the trade operation is executed;</span>
</li>

<li><span class="f_FunctionRemLI">comment to the reply code, error
description.</span>
</li>
</ul>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">It
should be noted that the successful completion of the OrderSend()
method operation does not always mean a successful deal completion
when placing a market order. Check the</span> <span class=
"f_FunctionRemark" style="font-style: italic;">retcode</span>
<span class="f_FunctionRemark">value containing <a href=
"enum_trade_return_codes.htm" class="topiclink">trade server return
code</a>, and values of</span> <span class="f_FunctionRemark"
style="font-style: italic;">deal</span> <span class=
"f_FunctionRemark">or</span> <span class="f_FunctionRemark" style=
"font-style: italic;">order</span> <span class=
"f_FunctionRemark">field depending on the <a href=
"enum_trade_request_actions.htm" class="topiclink">type of
operation</a> &nbsp;in the returned</span> <span class=
"f_FunctionRemark" style="font-style: italic;"><a href=
"mqltraderesult.htm" class=
"topiclink">result</a></span><span class="f_FunctionRemark">.</span></p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">Each
accepted order is stored on the trade server awaiting processing
until one of the conditions for its execution occurs:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 24px; margin: 1px 17px 1px 24px;">
<li><span class="f_FunctionRemLI">expiration,</span>
</li>

<li><span class="f_FunctionRemLI">appearance of an opposite
request,</span>
</li>

<li><span class="f_FunctionRemLI">order execution when the
execution price appears,</span>
</li>

<li><span class="f_FunctionRemLI">a request to cancel the order is
received.</span>
</li>
</ul>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">At the
moment of the order processing, the trade server sends to the
terminal a message about the occurrence of the <a href=
"event_fire.htm#trade" class="topiclink">Trade</a> event, which can
be processed by the <a href="events.htm#ontrade" class=
"topiclink">OnTrade()</a> function.</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">The
result of executing the trade request on a server sent by
OrderSend() function can be tracked by <a href=
"events.htm#ontradetransaction" class=
"topiclink">OnTradeTransaction</a> handler. It should be noted that
OnTradeTransaction handler will be called several times when
executing one trade request.</span>
</p>

<p class="p_FunctionRemark"><span class="f_Text">For example, when
sending a market buy order, it is handled, an appropriate buy order
is created for the account, the order is then executed and removed
from the list of the open ones, then it is added to the orders
history, an appropriate deal is added to the history and a new
position is created. OnTradeTransaction function will be called for
each of these events.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;value&nbsp;for&nbsp;ORDER_MAGIC</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #c0504d;">order_magic</span><span class=
"f_CodeExample">=55555;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;make&nbsp;sure&nbsp;that&nbsp;the&nbsp;account&nbsp;is&nbsp;demo</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">AccountInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ACCOUNT_TRADE_MODE</span><span class=
"f_CodeExample">)==</span><span class="f_CodeExample" style=
"color: #0000ff;">ACCOUNT_TRADE_MODE_REAL</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Alert</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Script&nbsp;operation&nbsp;is&nbsp;not&nbsp;allowed&nbsp;on&nbsp;a&nbsp;live&nbsp;account!"</span><span class="f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;place&nbsp;or&nbsp;delete&nbsp;order</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(GetOrdersTotalByMagic(</span><span class=
"f_CodeExample" style=
"color: #c0504d;">order_magic</span><span class=
"f_CodeExample">)==0)&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;no&nbsp;current&nbsp;orders&nbsp;-&nbsp;place&nbsp;an&nbsp;order</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;res=SendRandomPendingOrder(</span><span class="f_CodeExample"
style="color: #c0504d;">order_magic</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Return&nbsp;code&nbsp;of&nbsp;the&nbsp;trade&nbsp;server&nbsp;"</span><span class="f_CodeExample">,res);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;there&nbsp;are&nbsp;orders&nbsp;-&nbsp;delete&nbsp;orders</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeleteAllOrdersByMagic(</span><span class="f_CodeExample"
style="color: #c0504d;">order_magic</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Receives&nbsp;the&nbsp;current&nbsp;number&nbsp;of&nbsp;orders&nbsp;with&nbsp;specified&nbsp;ORDER_MAGIC&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;GetOrdersTotalByMagic(</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;magic_number)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">ulong</span><span class=
"f_CodeExample">&nbsp;order_ticket;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;total=0;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;go&nbsp;through&nbsp;all&nbsp;pending&nbsp;orders</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=0;i&lt;</span><span class="f_CodeExample"
style="color: #0000ff;">OrdersTotal</span><span class=
"f_CodeExample">();i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">((order_ticket=</span><span class="f_CodeExample"
style="color: #0000ff;">OrderGetTicket</span><span class=
"f_CodeExample">(i))&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(magic_number==</span><span class="f_CodeExample"
style="color: #0000ff;">OrderGetInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_MAGIC</span><span class=
"f_CodeExample">))&nbsp;total++;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(total);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Deletes&nbsp;all&nbsp;pending&nbsp;orders&nbsp;with&nbsp;specified&nbsp;ORDER_MAGIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;DeleteAllOrdersByMagic(</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;magic_number)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">ulong</span><span class=
"f_CodeExample">&nbsp;order_ticket;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;go&nbsp;through&nbsp;all&nbsp;pending&nbsp;orders</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=</span><span class="f_CodeExample" style=
"color: #0000ff;">OrdersTotal</span><span class=
"f_CodeExample">()-1;i&gt;=0;i--)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">((order_ticket=</span><span class="f_CodeExample"
style="color: #0000ff;">OrderGetTicket</span><span class=
"f_CodeExample">(i))&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;order&nbsp;with&nbsp;appropriate&nbsp;ORDER_MAGIC</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(magic_number==</span><span class="f_CodeExample"
style="color: #0000ff;">OrderGetInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_MAGIC</span><span class=
"f_CodeExample">))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #ff00ff;">MqlTradeResult</span><span class=
"f_CodeExample">&nbsp;result={0};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #ff00ff;">MqlTradeRequest</span><span class=
"f_CodeExample">&nbsp;request={0};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.order=order_ticket;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.action=</span><span class="f_CodeExample"
style="color: #0000ff;">TRADE_ACTION_REMOVE</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">OrderSend</span><span class=
"f_CodeExample">(request,result);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;write&nbsp;the&nbsp;server&nbsp;reply&nbsp;to&nbsp;log</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__FUNCTION__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">":&nbsp;"</span><span class=
"f_CodeExample">,result.comment,</span><span class="f_CodeExample"
style=
"color: #008080;">"&nbsp;reply&nbsp;code&nbsp;"</span><span class=
"f_CodeExample">,result.retcode);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Sets&nbsp;a&nbsp;pending&nbsp;order&nbsp;in&nbsp;a&nbsp;random&nbsp;way&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">uint</span><span class=
"f_CodeExample">&nbsp;SendRandomPendingOrder(</span><span class=
"f_CodeExample" style="color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;magic_number)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;prepare&nbsp;a&nbsp;request</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #ff00ff;">MqlTradeRequest</span><span class=
"f_CodeExample">&nbsp;request={0};</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.action=</span><span class="f_CodeExample"
style="color: #0000ff;">TRADE_ACTION_PENDING</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;setting&nbsp;a&nbsp;pending&nbsp;order</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.magic=magic_number;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;ORDER_MAGIC</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.</span><span class=
"f_CodeExample" style="color: #0000ff;">symbol</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #800080;">_Symbol</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;symbol</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.volume=0.1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;volume&nbsp;in&nbsp;0.1&nbsp;lots</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.sl=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Stop&nbsp;Loss&nbsp;is&nbsp;not&nbsp;specified</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.tp=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Take&nbsp;Profit&nbsp;is&nbsp;not&nbsp;specified&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;form&nbsp;the&nbsp;order&nbsp;type</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.type=GetRandomType();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;order&nbsp;type</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;form&nbsp;the&nbsp;price&nbsp;for&nbsp;the&nbsp;pending&nbsp;order</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;request.price=GetRandomPrice(request.type);&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;open&nbsp;price</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;send&nbsp;a&nbsp;trade&nbsp;request</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #ff00ff;">MqlTradeResult</span><span class=
"f_CodeExample">&nbsp;result={0};</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">OrderSend</span><span class="f_CodeExample">(request,result);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;write&nbsp;the&nbsp;server&nbsp;reply&nbsp;to&nbsp;log&nbsp;&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">__FUNCTION__</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">":"</span><span class=
"f_CodeExample">,result.comment);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(result.retcode==10016)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(result.bid,result.ask,result.price);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;return&nbsp;code&nbsp;of&nbsp;the&nbsp;trade&nbsp;server&nbsp;reply</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">&nbsp;result.retcode;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Returns&nbsp;type&nbsp;of&nbsp;a&nbsp;pending&nbsp;order&nbsp;in&nbsp;a&nbsp;random&nbsp;way&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class=
"f_CodeExample">ENUM_ORDER_TYPE&nbsp;GetRandomType()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;t=</span><span class="f_CodeExample" style=
"color: #0000ff;">MathRand</span><span class=
"f_CodeExample">()%4;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;&nbsp;&nbsp;0&lt;=t&lt;4</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">switch</span><span class=
"f_CodeExample">(t)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">(0):</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_TYPE_BUY_LIMIT</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">(1):</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_TYPE_SELL_LIMIT</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">(2):</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_TYPE_BUY_STOP</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">(3):</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">ORDER_TYPE_SELL_STOP</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;incorrect&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">WRONG_VALUE</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Returns&nbsp;price&nbsp;in&nbsp;a&nbsp;random&nbsp;way&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;GetRandomPrice(</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ENUM_ORDER_TYPE</span><span class=
"f_CodeExample">&nbsp;type)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;t=(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">)type;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;stop&nbsp;levels&nbsp;for&nbsp;the&nbsp;symbol</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;distance=(</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">)</span><span class="f_CodeExample" style=
"color: #0000ff;">SymbolInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">_Symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SYMBOL_TRADE_STOPS_LEVEL</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;receive&nbsp;data&nbsp;of&nbsp;the&nbsp;last&nbsp;tick</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #ff00ff;">MqlTick</span><span class=
"f_CodeExample">&nbsp;last_tick={0};</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SymbolInfoTick</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">_Symbol</span><span class=
"f_CodeExample">,last_tick);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;calculate&nbsp;price&nbsp;according&nbsp;to&nbsp;the&nbsp;type</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;price;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(t==2&nbsp;||&nbsp;t==5)&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;ORDER_TYPE_BUY_LIMIT&nbsp;or&nbsp;ORDER_TYPE_SELL_STOP</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=last_tick.bid;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;depart&nbsp;from&nbsp;price&nbsp;Bid</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=price-(distance+(</span><span class="f_CodeExample"
style="color: #0000ff;">MathRand</span><span class=
"f_CodeExample">()%10)*5)*</span><span class="f_CodeExample" style=
"color: #0000ff;">_Point</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;ORDER_TYPE_SELL_LIMIT&nbsp;or&nbsp;ORDER_TYPE_BUY_STOP</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=last_tick.ask;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;depart&nbsp;from&nbsp;price&nbsp;Ask</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=price+(distance+(</span><span class="f_CodeExample"
style="color: #0000ff;">MathRand</span><span class=
"f_CodeExample">()%10)*5)*</span><span class="f_CodeExample" style=
"color: #0000ff;">_Point</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(price);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href=
"enum_trade_request_actions.htm" class="topiclink">Trade Operation
Types</a>, <a href="mqltraderequest.htm" class="topiclink">Trade
Request Structure</a>, <a href="mqltradecheckresult.htm" class=
"topiclink">Structure of Request Check Results</a>, <a href=
"mqltraderesult.htm" class="topiclink">Structure of a Trade Request
Result</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
