<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>ArrayMinimum</title>
<meta name="keywords" content="ArrayMinimum">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "arrayminimum.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=arrayminimum.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=arrayminimum.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="array.htm">Array Functions</a> /
ArrayMinimum</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="arraymaximum.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="arrayrange.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">ArrayMinimum</span>
</p>

<p class="p_Function"><span class="f_Function">Searches for the
lowest element in the first dimension of a multidimensional numeric
array.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">int&nbsp;&nbsp;</span><span class=
"f_Functions">ArrayMinimum</span><span class=
"f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">const&nbsp;void&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Param">array[]</span><span class=
"f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;array&nbsp;for&nbsp;search</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">start=0</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;index&nbsp;to&nbsp;start&nbsp;checking&nbsp;with</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">count=WHOLE_ARRAY&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;number&nbsp;of&nbsp;checked&nbsp;elements</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class=
"f_BoldTitles">Parameters</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">array[]</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;A numeric array, in which
search is made.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">start=0</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Index to start checking
with.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">count=WHOLE_ARRAY</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Number of elements for search.
By default, searches in the entire array (count=<a href=
"otherconstants.htm" class="topiclink">WHOLE_ARRAY</a>).</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Return
Value</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">The
function returns an index of a found element taking into account
the array <a href="arraygetasseries.htm" class=
"topiclink">serial</a>. In case of failure it returns -1.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">The
<a href="arraygetasseries.htm" class="topiclink">AS_SERIES</a> flag
value is taken into account while searching for a minimum.</span>
</p>

<p class="p_FunctionRemark"><span class=
"f_FunctionRemark">Functions ArrayMaximum and ArrayMinimum accept
any-dimensional arrays as a parameter. However, searching is always
applied to the first (zero) dimension.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"The&nbsp;indicator&nbsp;displays&nbsp;larger&nbsp;timeframe's&nbsp;candlesticks&nbsp;on&nbsp;the&nbsp;current&nbsp;one."</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;settings</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_chart_window</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_buffers</span><span class=
"f_CodeExample">&nbsp;16</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_plots</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;8</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;1</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label1</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BearBody"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color1</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSeaGreen</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSeaGreen</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;2</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label2</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BearBodyEnd"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color2</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSeaGreen</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSeaGreen</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;3</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label3</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BearShadow"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color3</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSalmon</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSalmon</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;4</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label4</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BearShadowEnd"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color4</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSalmon</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSalmon</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;5</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label5</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BullBody"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color5</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrOlive</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrOlive</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;6</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label6</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BullBodyEnd"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color6</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrOlive</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrOlive</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;7</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label7</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BullShadow"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color7</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSkyBlue</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSkyBlue</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot&nbsp;8</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label8</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"BullShadowEnd"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color8</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrSkyBlue</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrSkyBlue</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;predefined&nbsp;constant</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#define</span><span class=
"f_CodeExample">&nbsp;INDICATOR_EMPTY_VALUE&nbsp;0.0</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;input&nbsp;parameters</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #800000;">InpPeriod</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H4</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Time&nbsp;frame&nbsp;for&nbsp;the&nbsp;indicator&nbsp;calculation</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #800000;">InpDateStart</span><span class=
"f_CodeExample">=D'2013.01.01&nbsp;00:00';&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;Analysis&nbsp;start&nbsp;date</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;buffers&nbsp;for&nbsp;bearish&nbsp;candlesticks</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodySecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyEndFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyEndSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowEndFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowEndSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;buffers&nbsp;for&nbsp;bullish&nbsp;candlesticks</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodySecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyEndFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyEndSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowEndFirst[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowEndSecond[];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;global&nbsp;variables</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;ExtTimeBuff[];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;larger&nbsp;time&nbsp;frame's&nbsp;time&nbsp;buffer</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtSize=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;time&nbsp;buffer&nbsp;size</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;index&nbsp;inside&nbsp;time&nbsp;buffer</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartPos=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;initial&nbsp;position&nbsp;for&nbsp;the&nbsp;indicator&nbsp;calculation</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartFlag=</span><span class="f_CodeExample"
style="color: #0000ff;">true</span><span class=
"f_CodeExample">;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;auxiliary&nbsp;flag&nbsp;for&nbsp;receiving&nbsp;the&nbsp;initial&nbsp;position</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;ExtCurrentTime[1];&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;last&nbsp;time&nbsp;of&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame's&nbsp;bar&nbsp;generation</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;ExtLastTime;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;last&nbsp;time&nbsp;from&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame,&nbsp;for&nbsp;which&nbsp;the&nbsp;calculation&nbsp;is&nbsp;performed</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtBearFlag=</span><span class="f_CodeExample"
style="color: #0000ff;">true</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;flag&nbsp;for&nbsp;defining&nbsp;the&nbsp;order&nbsp;of&nbsp;writing&nbsp;the&nbsp;data&nbsp;to&nbsp;bearish&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtBullFlag=</span><span class="f_CodeExample"
style="color: #0000ff;">true</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;flag&nbsp;for&nbsp;defining&nbsp;the&nbsp;order&nbsp;of&nbsp;writing&nbsp;the&nbsp;data&nbsp;to&nbsp;bullish&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtIndexMax=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;index&nbsp;of&nbsp;the&nbsp;maximum&nbsp;element&nbsp;in&nbsp;the&nbsp;array</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtIndexMin=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;index&nbsp;of&nbsp;the&nbsp;minimum&nbsp;element&nbsp;in&nbsp;the&nbsp;array</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtDirectionFlag=0;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;price&nbsp;movement&nbsp;direction&nbsp;for&nbsp;the&nbsp;current&nbsp;candlestick</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;shift&nbsp;between&nbsp;the&nbsp;candlestick's&nbsp;open&nbsp;and&nbsp;close&nbsp;price&nbsp;for&nbsp;correct&nbsp;drawing</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtEmptyBodySize=0.2*</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SymbolInfoDouble</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">Symbol</span><span class=
"f_CodeExample">(),</span><span class="f_CodeExample" style=
"color: #0000ff;">SYMBOL_POINT</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Filling&nbsp;the&nbsp;basic&nbsp;part&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FillCandleMain(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;last,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;fill_index,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&amp;index_max,</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&amp;index_min)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;find&nbsp;the&nbsp;index&nbsp;of&nbsp;the&nbsp;maximum&nbsp;and&nbsp;minimum&nbsp;elements&nbsp;in&nbsp;the&nbsp;arrays</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;index_max=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayMaximum</span><span class=
"f_CodeExample">(high,ExtStartPos,last-start+1);&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;maximum&nbsp;in&nbsp;High</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;index_min=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayMinimum</span><span class=
"f_CodeExample">(low,ExtStartPos,last-start+1);&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;minimum&nbsp;in&nbsp;Low</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;define&nbsp;how&nbsp;many&nbsp;bars&nbsp;from&nbsp;the&nbsp;current&nbsp;time&nbsp;frame&nbsp;are&nbsp;to&nbsp;be&nbsp;filled&nbsp;out</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;count=fill_index-start+1;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;exceeds&nbsp;the&nbsp;one&nbsp;at&nbsp;the&nbsp;last&nbsp;bar,&nbsp;the&nbsp;candlestick&nbsp;is&nbsp;bearish</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(open[start]&gt;close[last])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;candlestick&nbsp;has&nbsp;been&nbsp;bullish&nbsp;before&nbsp;that,&nbsp;clear&nbsp;the&nbsp;values&nbsp;of&nbsp;bullish&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtDirectionFlag!=-1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClearCandle(ExtBullBodyFirst,ExtBullBodySecond,ExtBullShadowFirst,ExtBullShadowSecond,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;bearish&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtDirectionFlag=-1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleMain(ExtBearBodyFirst,ExtBearBodySecond,ExtBearShadowFirst,ExtBearShadowSecond,open[start],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close[last],high[index_max],low[index_min],start,count,ExtBearFlag);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;exit&nbsp;the&nbsp;function</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;is&nbsp;less&nbsp;than&nbsp;the&nbsp;one&nbsp;at&nbsp;the&nbsp;last&nbsp;bar,&nbsp;the&nbsp;candlestick&nbsp;is&nbsp;bullish</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(open[start]&lt;close[last])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;candlestick&nbsp;has&nbsp;been&nbsp;bearish&nbsp;before&nbsp;that,&nbsp;clear&nbsp;the&nbsp;values&nbsp;of&nbsp;bearish&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtDirectionFlag!=1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClearCandle(ExtBearBodyFirst,ExtBearBodySecond,ExtBearShadowFirst,ExtBearShadowSecond,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;bullish&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtDirectionFlag=1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleMain(ExtBullBodyFirst,ExtBullBodySecond,ExtBullShadowFirst,ExtBullShadowSecond,close[last],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start],high[index_max],low[index_min],start,count,ExtBullFlag);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;exit&nbsp;the&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;you&nbsp;are&nbsp;in&nbsp;this&nbsp;part&nbsp;of&nbsp;the&nbsp;function,&nbsp;the&nbsp;open&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;is&nbsp;equal&nbsp;to</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;last&nbsp;bar;&nbsp;such&nbsp;candlestick&nbsp;is&nbsp;considered&nbsp;bearish</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;candlestick&nbsp;has&nbsp;been&nbsp;bullish&nbsp;before&nbsp;that,&nbsp;clear&nbsp;the&nbsp;values&nbsp;of&nbsp;bullish&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtDirectionFlag!=-1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClearCandle(ExtBullBodyFirst,ExtBullBodySecond,ExtBullShadowFirst,ExtBullShadowSecond,start,count);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;bearish&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtDirectionFlag=-1;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;close&nbsp;and&nbsp;open&nbsp;prices&nbsp;are&nbsp;equal,&nbsp;use&nbsp;the&nbsp;shift&nbsp;for&nbsp;correct&nbsp;display</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high[index_max]!=low[index_min])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleMain(ExtBearBodyFirst,ExtBearBodySecond,ExtBearShadowFirst,ExtBearShadowSecond,open[start],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start]-ExtEmptyBodySize,high[index_max],low[index_min],start,count,ExtBearFlag);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleMain(ExtBearBodyFirst,ExtBearBodySecond,ExtBearShadowFirst,ExtBearShadowSecond,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start],open[start]-ExtEmptyBodySize,high[index_max],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;high[index_max]-ExtEmptyBodySize,start,count,ExtBearFlag);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Fill&nbsp;out&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FillCandleEnd(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;last,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;fill_index,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;index_max,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;index_min)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;do&nbsp;not&nbsp;draw&nbsp;in&nbsp;case&nbsp;of&nbsp;a&nbsp;single&nbsp;bar</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(last-start==0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;exceeds&nbsp;the&nbsp;one&nbsp;at&nbsp;the&nbsp;last&nbsp;bar,&nbsp;the&nbsp;candlestick&nbsp;is&nbsp;bearish</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(open[start]&gt;close[last])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleEnd(ExtBearBodyEndFirst,ExtBearBodyEndSecond,ExtBearShadowEndFirst,ExtBearShadowEndSecond,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start],close[last],high[index_max],low[index_min],fill_index,ExtBearFlag);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;exit&nbsp;the&nbsp;function</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;is&nbsp;less&nbsp;than&nbsp;the&nbsp;one&nbsp;at&nbsp;the&nbsp;last&nbsp;bar,&nbsp;the&nbsp;candlestick&nbsp;is&nbsp;bullish</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(open[start]&lt;close[last])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleEnd(ExtBullBodyEndFirst,ExtBullBodyEndSecond,ExtBullShadowEndFirst,ExtBullShadowEndSecond,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close[last],open[start],high[index_max],low[index_min],fill_index,ExtBullFlag);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;exit&nbsp;the&nbsp;function</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;you&nbsp;are&nbsp;in&nbsp;this&nbsp;part&nbsp;of&nbsp;the&nbsp;function,&nbsp;the&nbsp;open&nbsp;price&nbsp;at&nbsp;the&nbsp;first&nbsp;bar&nbsp;is&nbsp;equal&nbsp;to</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;close&nbsp;price&nbsp;at&nbsp;the&nbsp;last&nbsp;bar;&nbsp;such&nbsp;candlestick&nbsp;is&nbsp;considered&nbsp;bearish</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high[index_max]!=low[index_min])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleEnd(ExtBearBodyEndFirst,ExtBearBodyEndSecond,ExtBearShadowEndFirst,ExtBearShadowEndSecond,open[start],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start]-ExtEmptyBodySize,high[index_max],low[index_min],fill_index,ExtBearFlag);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormCandleEnd(ExtBearBodyEndFirst,ExtBearBodyEndSecond,ExtBearShadowEndFirst,ExtBearShadowEndSecond,open[start],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open[start]-ExtEmptyBodySize,high[index_max],high[index_max]-ExtEmptyBodySize,fill_index,ExtBearFlag);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;initialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;the&nbsp;indicator&nbsp;period</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!CheckPeriod((</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">)</span><span class="f_CodeExample" style=
"color: #0000ff;">Period</span><span class=
"f_CodeExample">(),(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">)</span><span class="f_CodeExample" style=
"color: #800000;">InpPeriod</span><span class=
"f_CodeExample">))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_PARAMETERS_INCORRECT</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;display&nbsp;price&nbsp;data&nbsp;in&nbsp;the&nbsp;foreground</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ChartSetInteger</span><span class=
"f_CodeExample">(0,</span><span class="f_CodeExample" style=
"color: #0000ff;">CHART_FOREGROUND</span><span class=
"f_CodeExample">,0,1);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;binding&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(0,ExtBearBodyFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(1,ExtBearBodySecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(2,ExtBearBodyEndFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(3,ExtBearBodyEndSecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(4,ExtBearShadowFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(5,ExtBearShadowSecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(6,ExtBearShadowEndFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(7,ExtBearShadowEndSecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(8,ExtBullBodyFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(9,ExtBullBodySecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(10,ExtBullBodyEndFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(11,ExtBullBodyEndSecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(12,ExtBullShadowFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(13,ExtBullShadowSecond);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(14,ExtBullShadowEndFirst);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(15,ExtBullShadowEndSecond);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;some&nbsp;property&nbsp;values&nbsp;for&nbsp;creating&nbsp;the&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=0;i&lt;8;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PlotIndexSetInteger</span><span class=
"f_CodeExample">(i,</span><span class="f_CodeExample" style=
"color: #0000ff;">PLOT_DRAW_TYPE</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">DRAW_FILLING</span><span class=
"f_CodeExample">);&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;graphical&nbsp;construction&nbsp;type</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PlotIndexSetInteger</span><span class=
"f_CodeExample">(i,</span><span class="f_CodeExample" style=
"color: #0000ff;">PLOT_LINE_STYLE</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">STYLE_SOLID</span><span class=
"f_CodeExample">);&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;drawing&nbsp;line&nbsp;style</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PlotIndexSetInteger</span><span class=
"f_CodeExample">(i,</span><span class="f_CodeExample" style=
"color: #0000ff;">PLOT_LINE_WIDTH</span><span class=
"f_CodeExample">,1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;drawing&nbsp;line&nbsp;width</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_SUCCEEDED</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;iteration&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnCalculate</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;rates_total,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;prev_calculated,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&amp;time[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;tick_volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&amp;spread[])</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;in&nbsp;case&nbsp;there&nbsp;are&nbsp;no&nbsp;calculated&nbsp;bars&nbsp;yet</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(prev_calculated==0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;receive&nbsp;larger&nbsp;time&nbsp;frame's&nbsp;bars&nbsp;arrival&nbsp;time</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!GetTimeData())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;direct&nbsp;indexing</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(time,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(high,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(low,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(open,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(close,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;start&nbsp;variable&nbsp;for&nbsp;calculation&nbsp;of&nbsp;bars</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start=prev_calculated;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;bar&nbsp;is&nbsp;generated,&nbsp;recalculate&nbsp;the&nbsp;indicator&nbsp;value&nbsp;on&nbsp;it</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(start!=0&nbsp;&amp;&amp;&nbsp;start==rates_total)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start--;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;loop&nbsp;for&nbsp;calculating&nbsp;the&nbsp;indicator&nbsp;values</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=start;i&lt;rates_total;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;fill&nbsp;i&nbsp;elements&nbsp;of&nbsp;the&nbsp;indicator&nbsp;buffers&nbsp;by&nbsp;empty&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillIndicatorBuffers(i);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;perform&nbsp;calculation&nbsp;for&nbsp;bars&nbsp;starting&nbsp;from&nbsp;InpDateStart&nbsp;date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(time[i]&gt;=</span><span class="f_CodeExample"
style="color: #800000;">InpDateStart</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;define&nbsp;position,&nbsp;from&nbsp;which&nbsp;the&nbsp;values&nbsp;are&nbsp;to&nbsp;be&nbsp;displayed,&nbsp;for&nbsp;the&nbsp;first&nbsp;time</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtStartFlag)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;store&nbsp;the&nbsp;number&nbsp;of&nbsp;the&nbsp;initial&nbsp;bar</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartPos=i;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;define&nbsp;the&nbsp;first&nbsp;date&nbsp;from&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame&nbsp;exceeding&nbsp;time[i]</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">while</span><span class=
"f_CodeExample">(time[i]&gt;=ExtTimeBuff[ExtCount])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtCount&lt;ExtSize-1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount++;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;change&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;flag&nbsp;in&nbsp;order&nbsp;not&nbsp;to&nbsp;run&nbsp;into&nbsp;this&nbsp;block&nbsp;again</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartFlag=</span><span class="f_CodeExample"
style="color: #0000ff;">false</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;check&nbsp;if&nbsp;there&nbsp;are&nbsp;still&nbsp;any&nbsp;elements&nbsp;in&nbsp;the&nbsp;array</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtCount&lt;ExtSize)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;wait&nbsp;for&nbsp;the&nbsp;current&nbsp;time&nbsp;frame's&nbsp;value&nbsp;to&nbsp;reach&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame's&nbsp;one</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(time[i]&gt;=ExtTimeBuff[ExtCount])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;draw&nbsp;the&nbsp;main&nbsp;part&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;(without&nbsp;filling&nbsp;out&nbsp;the&nbsp;area&nbsp;between&nbsp;the&nbsp;last&nbsp;and&nbsp;penultimate&nbsp;bar)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandleMain(open,close,high,low,ExtStartPos,i-1,i-2,ExtIndexMax,ExtIndexMin);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;fill&nbsp;out&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;(the&nbsp;area&nbsp;between&nbsp;the&nbsp;last&nbsp;and&nbsp;the&nbsp;penultimate&nbsp;bar)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandleEnd(open,close,high,low,ExtStartPos,i-1,i-1,ExtIndexMax,ExtIndexMin);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;shift&nbsp;the&nbsp;initial&nbsp;position&nbsp;for&nbsp;drawing&nbsp;the&nbsp;next&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartPos=i;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;increase&nbsp;the&nbsp;array&nbsp;counter</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount++;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">continue</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;reset&nbsp;the&nbsp;array&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ResetLastError</span><span class=
"f_CodeExample">();</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;receive&nbsp;the&nbsp;last&nbsp;date&nbsp;from&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">Symbol</span><span class=
"f_CodeExample">(),</span><span class="f_CodeExample" style=
"color: #800000;">InpPeriod</span><span class=
"f_CodeExample">,0,1,ExtCurrentTime)==-1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Data&nbsp;copy&nbsp;error,&nbsp;code&nbsp;=&nbsp;"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;new&nbsp;date&nbsp;is&nbsp;later,&nbsp;stop&nbsp;generating&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(ExtCurrentTime[0]&gt;ExtLastTime)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;clear&nbsp;the&nbsp;area&nbsp;between&nbsp;the&nbsp;last&nbsp;and&nbsp;penultimate&nbsp;bars&nbsp;in&nbsp;the&nbsp;main&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClearEndOfBodyMain(i-1);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;fill&nbsp;out&nbsp;the&nbsp;area&nbsp;using&nbsp;auxiliary&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandleEnd(open,close,high,low,ExtStartPos,i-1,i-1,ExtIndexMax,ExtIndexMin);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;shift&nbsp;the&nbsp;initial&nbsp;position&nbsp;for&nbsp;drawing&nbsp;the&nbsp;next&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStartPos=i;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;reset&nbsp;price&nbsp;direction&nbsp;flag</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtDirectionFlag=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;store&nbsp;the&nbsp;new&nbsp;last&nbsp;date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtLastTime=ExtCurrentTime[0];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandleMain(open,close,high,low,ExtStartPos,i,i,ExtIndexMax,ExtIndexMin);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;return&nbsp;value&nbsp;of&nbsp;prev_calculated&nbsp;for&nbsp;next&nbsp;call</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(rates_total);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Check&nbsp;correctness&nbsp;of&nbsp;the&nbsp;specified&nbsp;indicator&nbsp;period&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;CheckPeriod(</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;current_period,</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;high_period)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;indicator&nbsp;period&nbsp;should&nbsp;exceed&nbsp;the&nbsp;timeframe&nbsp;on&nbsp;which&nbsp;it&nbsp;is&nbsp;displayed</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(current_period&gt;=high_period)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Error!&nbsp;The&nbsp;value&nbsp;of&nbsp;the&nbsp;indicator&nbsp;period&nbsp;should&nbsp;exceed&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;current&nbsp;time&nbsp;frame!"</span><span class="f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;indicator&nbsp;period&nbsp;is&nbsp;one&nbsp;week&nbsp;or&nbsp;month,&nbsp;the&nbsp;period&nbsp;is&nbsp;correct</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high_period&gt;32768)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;convert&nbsp;period&nbsp;values&nbsp;to&nbsp;minutes</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high_period&gt;30)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;high_period=(high_period-16384)*60;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(current_period&gt;30)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_period=(current_period-16384)*60;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;indicator&nbsp;period&nbsp;should&nbsp;be&nbsp;multiple&nbsp;of&nbsp;the&nbsp;time&nbsp;frame&nbsp;it&nbsp;is&nbsp;displayed&nbsp;on</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high_period%current_period!=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Error!&nbsp;The&nbsp;value&nbsp;of&nbsp;the&nbsp;indicator&nbsp;period&nbsp;should&nbsp;be&nbsp;multiple&nbsp;of&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;current&nbsp;time&nbsp;frame!"</span><span class="f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;indicator&nbsp;period&nbsp;should&nbsp;exceed&nbsp;the&nbsp;time&nbsp;frame&nbsp;it&nbsp;is&nbsp;displayed&nbsp;on&nbsp;3&nbsp;or&nbsp;more&nbsp;times</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(high_period/current_period&lt;3)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Error!&nbsp;The&nbsp;indicator&nbsp;period&nbsp;should&nbsp;exceed&nbsp;the&nbsp;current&nbsp;time&nbsp;frame&nbsp;3&nbsp;or&nbsp;more&nbsp;times!"</span><span class="f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;indicator&nbsp;period&nbsp;is&nbsp;correct&nbsp;for&nbsp;the&nbsp;current&nbsp;time&nbsp;frame</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Receive&nbsp;time&nbsp;data&nbsp;from&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;GetTimeData(</span><span class=
"f_CodeExample" style="color: #0000ff;">void</span><span class=
"f_CodeExample">)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reset&nbsp;the&nbsp;error&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ResetLastError</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;copy&nbsp;all&nbsp;data&nbsp;for&nbsp;the&nbsp;current&nbsp;time</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">Symbol</span><span class=
"f_CodeExample">(),</span><span class="f_CodeExample" style=
"color: #800000;">InpPeriod</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #800000;">InpDateStart</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">TimeCurrent</span><span class=
"f_CodeExample">(),ExtTimeBuff)==-1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;receive&nbsp;the&nbsp;error&nbsp;code</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;code=</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">();</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;print&nbsp;out&nbsp;the&nbsp;error&nbsp;message</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Data&nbsp;copy&nbsp;error!&nbsp;%s"</span><span class="f_CodeExample">,code==4401</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?&nbsp;</span><span class="f_CodeExample"
style=
"color: #008080;">"History&nbsp;is&nbsp;still&nbsp;being&nbsp;uploaded!"</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"Code&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">+</span><span class="f_CodeExample" style=
"color: #0000ff;">IntegerToString</span><span class=
"f_CodeExample">(code));</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;return&nbsp;false&nbsp;to&nbsp;make&nbsp;a&nbsp;repeated&nbsp;attempt&nbsp;to&nbsp;download&nbsp;data</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;receive&nbsp;the&nbsp;array&nbsp;size</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtSize=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySize</span><span class="f_CodeExample">(ExtTimeBuff);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;the&nbsp;loop&nbsp;index&nbsp;for&nbsp;the&nbsp;array&nbsp;to&nbsp;zero</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtCount=0;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;the&nbsp;current&nbsp;candlestick's&nbsp;position&nbsp;on&nbsp;the&nbsp;time&nbsp;frame&nbsp;to&nbsp;zero</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtStartPos=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtStartFlag=</span><span class=
"f_CodeExample" style="color: #0000ff;">true</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;store&nbsp;the&nbsp;last&nbsp;time&nbsp;value&nbsp;from&nbsp;the&nbsp;larger&nbsp;time&nbsp;frame</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtLastTime=ExtTimeBuff[ExtSize-1];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;successful&nbsp;execution</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+--------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Function&nbsp;forms&nbsp;the&nbsp;main&nbsp;part&nbsp;of&nbsp;the&nbsp;candlestick.&nbsp;Depending&nbsp;on&nbsp;the&nbsp;flag's&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;value,&nbsp;the&nbsp;function&nbsp;defines&nbsp;what&nbsp;data&nbsp;and&nbsp;arrays&nbsp;are&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;correct&nbsp;display.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+--------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FormCandleMain(</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_fst[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_snd[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_fst[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_snd[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_value,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_value,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_extremum,</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_extremum,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;count,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;flag)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;the&nbsp;flag's&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(flag)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick's&nbsp;body</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormMain(body_fst,body_snd,fst_value,snd_value,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick's&nbsp;shadow</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormMain(shadow_fst,shadow_snd,fst_extremum,snd_extremum,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick's&nbsp;body</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormMain(body_fst,body_snd,snd_value,fst_value,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;candlestick's&nbsp;shadow</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormMain(shadow_fst,shadow_snd,snd_extremum,fst_extremum,start,count);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+--------------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;The&nbsp;function&nbsp;forms&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick.&nbsp;Depending&nbsp;on&nbsp;the&nbsp;flag's&nbsp;value,&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;the&nbsp;function&nbsp;defines&nbsp;what&nbsp;data&nbsp;and&nbsp;arrays&nbsp;are&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;correct&nbsp;display.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+--------------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FormCandleEnd(</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_fst[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_snd[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_fst[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_snd[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_value,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_value,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_extremum,</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_extremum,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;end,</span><span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;&amp;flag)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;the&nbsp;flag's&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(flag)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick's&nbsp;body</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormEnd(body_fst,body_snd,fst_value,snd_value,end);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick's&nbsp;shadow</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormEnd(shadow_fst,shadow_snd,fst_extremum,snd_extremum,end);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;change&nbsp;the&nbsp;flag's&nbsp;value&nbsp;to&nbsp;the&nbsp;opposite&nbsp;one</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=</span><span class="f_CodeExample"
style="color: #0000ff;">false</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick's&nbsp;body</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormEnd(body_fst,body_snd,snd_value,fst_value,end);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick's&nbsp;shadow</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormEnd(shadow_fst,shadow_snd,snd_extremum,fst_extremum,end);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;change&nbsp;the&nbsp;flag's&nbsp;value&nbsp;to&nbsp;the&nbsp;opposite&nbsp;one</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=</span><span class="f_CodeExample"
style="color: #0000ff;">true</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+-------------------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Clear&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;(the&nbsp;area&nbsp;between&nbsp;the&nbsp;last&nbsp;and&nbsp;the&nbsp;penultimate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;bar)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+-------------------------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;ClearEndOfBodyMain(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ind)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ClearCandle(ExtBearBodyFirst,ExtBearBodySecond,ExtBearShadowFirst,ExtBearShadowSecond,ind,1);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ClearCandle(ExtBullBodyFirst,ExtBullBodySecond,ExtBullShadowFirst,ExtBullShadowSecond,ind,1);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Clear&nbsp;the&nbsp;candlestick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;ClearCandle(</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_fst[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;body_snd[],</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_fst[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;shadow_snd[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;count)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(count!=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;fill&nbsp;indicator&nbsp;buffers&nbsp;with&nbsp;empty&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(body_fst,start,count,INDICATOR_EMPTY_VALUE);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(body_snd,start,count,INDICATOR_EMPTY_VALUE);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(shadow_fst,start,count,INDICATOR_EMPTY_VALUE);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(shadow_snd,start,count,INDICATOR_EMPTY_VALUE);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Generate&nbsp;the&nbsp;main&nbsp;part&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FormMain(</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;fst[],</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;snd[],</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_value,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_value,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;count)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(count!=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;fill&nbsp;indicator&nbsp;buffers&nbsp;with&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(fst,start,count,fst_value);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">ArrayFill</span><span class=
"f_CodeExample">(snd,start,count,snd_value);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Generate&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;candlestick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FormEnd(</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;fst[],</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;snd[],</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;fst_value,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;snd_value,</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;last)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;fill&nbsp;indicator&nbsp;buffers&nbsp;with&nbsp;values</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayFill</span><span class="f_CodeExample">(fst,last-1,2,fst_value);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayFill</span><span class="f_CodeExample">(snd,last-1,2,snd_value);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Fill&nbsp;i&nbsp;element&nbsp;of&nbsp;the&nbsp;indicator&nbsp;buffers&nbsp;by&nbsp;empty&nbsp;values&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FillIndicatorBuffers(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;an&nbsp;empty&nbsp;value&nbsp;in&nbsp;the&nbsp;cell&nbsp;of&nbsp;the&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodySecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyEndFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearBodyEndSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowEndFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBearShadowEndSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodySecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyEndFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullBodyEndSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowEndFirst[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ExtBullShadowEndSecond[i]=INDICATOR_EMPTY_VALUE;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_FunctionRemark"><span class=
"f_FunctionRemark">&nbsp;</span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
