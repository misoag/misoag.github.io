<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>ArrayCopy</title>
<meta name="keywords" content="ArrayCopy">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "arraycopy.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=arraycopy.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=arraycopy.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="array.htm">Array Functions</a> /
ArrayCopy</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="arraybsearch.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="arraycompare.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">ArrayCopy</span>
</p>

<p class="p_Function"><span class="f_Function">It copies an array
into another one.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">int&nbsp;&nbsp;</span><span class=
"f_Functions">ArrayCopy</span><span class=
"f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">void&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">dst_array[]</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;destination&nbsp;array</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">const&nbsp;void&amp;</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">src_array[]</span><span class=
"f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;source&nbsp;array</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">dst_start=0</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;index&nbsp;starting&nbsp;from&nbsp;which&nbsp;write&nbsp;into&nbsp;destination&nbsp;array</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">src_start=0</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;first&nbsp;index&nbsp;of&nbsp;a&nbsp;source&nbsp;array</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">count=WHOLE_ARRAY</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;number&nbsp;of&nbsp;elements</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class=
"f_BoldTitles">Parameters</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">dst_array[]</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[out] &nbsp;Destination array</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">src_array[]</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Source array</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">dst_start=0</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Starting index from the
destination array. By default, start index is 0.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">src_start=0</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Starting index for the source
array. By default, start index is 0.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">count=WHOLE_ARRAY</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] &nbsp;Number of elements that should
be copied. By default, the whole array is copied (count=<a href=
"otherconstants.htm" class="topiclink">WHOLE_ARRAY</a>).</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Return
Value</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">It
returns the number of copied elements.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">If
count&lt;0 or count&gt;src_size-src_start, all the remaining array
part is copied. Arrays are copied from left to right. For series
arrays, the starting position is correctly defined adjusted for
copying from left to right. If an array is copied to itself, the
result is undefined.</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">If
arrays are of different types, during copying it tries to transform
each element of a source array into the type of the destination
array. A string array can be copied into a string array only. Array
of <a href="classes.htm" class="topiclink">classes and
structures</a> containing objects that require initialization
aren't copied. An array of structures can be copied into an array
of the same type only.</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">For
dynamic arrays with indexing as in <a href="bufferdirection.htm"
class="topiclink">timeseries</a>, the size of a destination array
is automatically increased to the amount of copied data (if the
latter exceeds the array size). The destination array size is not
decreased automatically.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"The&nbsp;indicator&nbsp;highlights&nbsp;the&nbsp;candlesticks&nbsp;that&nbsp;are&nbsp;local"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"highs&nbsp;and&nbsp;lows.&nbsp;Interval&nbsp;length&nbsp;for&nbsp;finding"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"extreme&nbsp;values&nbsp;should&nbsp;be&nbsp;found&nbsp;using&nbsp;an&nbsp;input&nbsp;parameters."</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;settings</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_chart_window</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_buffers</span><span class=
"f_CodeExample">&nbsp;5</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_plots</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;1</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//----&nbsp;plot</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_label1</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"Extremums"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_type1</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">DRAW_COLOR_CANDLES</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_color1</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">clrLightSteelBlue</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrRed</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">clrBlue</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_style1</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">STYLE_SOLID</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_width1</span><span class=
"f_CodeExample">&nbsp;&nbsp;1</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;predefined&nbsp;constant</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#define</span><span class=
"f_CodeExample">&nbsp;INDICATOR_EMPTY_VALUE&nbsp;0.0</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;input&nbsp;parameters</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #800000;">InpNum</span><span class=
"f_CodeExample">=4;&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;Half-interval&nbsp;length</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtOpen[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtHigh[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtLow[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtClose[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ExtColor[];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;global&nbsp;variables</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;ExtStart=0;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;index&nbsp;of&nbsp;the&nbsp;first&nbsp;candlestick&nbsp;that&nbsp;is&nbsp;not&nbsp;an&nbsp;extremum</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;ExtCount=0;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;number&nbsp;of&nbsp;non-extremums&nbsp;in&nbsp;the&nbsp;interval</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Filling&nbsp;out&nbsp;non-extremum&nbsp;candlesticks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;FillCandles(</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[])</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;fill&nbsp;out&nbsp;the&nbsp;candlesticks</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayCopy</span><span class="f_CodeExample">(ExtOpen,open,ExtStart,ExtStart,ExtCount);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayCopy</span><span class="f_CodeExample">(ExtHigh,high,ExtStart,ExtStart,ExtCount);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayCopy</span><span class="f_CodeExample">(ExtLow,low,ExtStart,ExtStart,ExtCount);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArrayCopy</span><span class="f_CodeExample">(ExtClose,close,ExtStart,ExtStart,ExtCount);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;initialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;buffers&nbsp;mapping</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(0,ExtOpen);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(1,ExtHigh);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(2,ExtLow);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(3,ExtClose);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(4,ExtColor,</span><span class="f_CodeExample"
style="color: #0000ff;">INDICATOR_COLOR_INDEX</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;specify&nbsp;the&nbsp;value,&nbsp;which&nbsp;is&nbsp;not&nbsp;displayed</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PlotIndexSetDouble</span><span class=
"f_CodeExample">(0,</span><span class="f_CodeExample" style=
"color: #0000ff;">PLOT_EMPTY_VALUE</span><span class=
"f_CodeExample">,INDICATOR_EMPTY_VALUE);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;specify&nbsp;the&nbsp;names&nbsp;of&nbsp;indicator&nbsp;buffers&nbsp;for&nbsp;displaying&nbsp;in&nbsp;the&nbsp;data&nbsp;window</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PlotIndexSetString</span><span class=
"f_CodeExample">(0,</span><span class="f_CodeExample" style=
"color: #0000ff;">PLOT_LABEL</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"Open;High;Low;Close"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_SUCCEEDED</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;iteration&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnCalculate</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;rates_total,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;prev_calculated,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&amp;time[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;tick_volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&amp;spread[])</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;set&nbsp;straight&nbsp;indexing&nbsp;in&nbsp;time&nbsp;series</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(open,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(high,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(low,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ArraySetAsSeries</span><span class=
"f_CodeExample">(close,</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;variable&nbsp;of&nbsp;the&nbsp;bar&nbsp;calculation&nbsp;start</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;start=prev_calculated;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;calculation&nbsp;is&nbsp;not&nbsp;performed&nbsp;for&nbsp;the&nbsp;first&nbsp;InpNum*2&nbsp;bars</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(start==0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start+=</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">*2;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStart=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;bar&nbsp;has&nbsp;just&nbsp;formed,&nbsp;check&nbsp;the&nbsp;next&nbsp;potential&nbsp;extremum</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(rates_total-start==1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start--;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;bar&nbsp;index&nbsp;to&nbsp;be&nbsp;checked&nbsp;for&nbsp;the&nbsp;extremum</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ext;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;value&nbsp;calculation&nbsp;loop</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=start;i&lt;rates_total-1;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;initially&nbsp;on&nbsp;i&nbsp;bar&nbsp;without&nbsp;drawing</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtOpen[i]=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtHigh[i]=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtLow[i]=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtClose[i]=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;extremum&nbsp;index&nbsp;for&nbsp;check</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext=i-</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;local&nbsp;maximum</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(IsMax(high,ext))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;highlight&nbsp;an&nbsp;extremum&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtOpen[ext]=open[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtHigh[ext]=high[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtLow[ext]=low[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtClose[ext]=close[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtColor[ext]=1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;highlight&nbsp;other&nbsp;candles&nbsp;up&nbsp;to&nbsp;the&nbsp;extremum&nbsp;with&nbsp;a&nbsp;neutral&nbsp;color</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandles(open,high,low,close);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;change&nbsp;the&nbsp;variable&nbsp;colors</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStart=ext+1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;pass&nbsp;to&nbsp;the&nbsp;next&nbsp;iteration</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">continue</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;local&nbsp;minimum</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(IsMin(low,ext))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;highlight&nbsp;an&nbsp;extremum&nbsp;candlestick</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtOpen[ext]=open[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtHigh[ext]=high[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtLow[ext]=low[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtClose[ext]=close[ext];</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtColor[ext]=2;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;highlight&nbsp;other&nbsp;candles&nbsp;up&nbsp;to&nbsp;the&nbsp;extremum&nbsp;with&nbsp;a&nbsp;neutral&nbsp;color</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FillCandles(open,high,low,close);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;change&nbsp;variable&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtStart=ext+1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;pass&nbsp;to&nbsp;the&nbsp;next&nbsp;iteration</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">continue</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;increase&nbsp;the&nbsp;number&nbsp;of&nbsp;non-extremums&nbsp;at&nbsp;the&nbsp;interval</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExtCount++;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;return&nbsp;value&nbsp;of&nbsp;prev_calculated&nbsp;for&nbsp;next&nbsp;call</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(rates_total);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Check&nbsp;if&nbsp;the&nbsp;current&nbsp;array&nbsp;element&nbsp;is&nbsp;a&nbsp;local&nbsp;high&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;IsMax(</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;price[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ind)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;interval&nbsp;start&nbsp;variable</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=ind-</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;interval&nbsp;end&nbsp;period</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;finish=ind+</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">+1;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;first&nbsp;half&nbsp;of&nbsp;the&nbsp;interval</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(;i&lt;ind;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(price[ind]&lt;=price[i])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;second&nbsp;half&nbsp;of&nbsp;the&nbsp;interval</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(i=ind+1;i&lt;finish;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(price[ind]&lt;=price[i])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;this&nbsp;is&nbsp;an&nbsp;extremum</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Check&nbsp;if&nbsp;the&nbsp;current&nbsp;array&nbsp;element&nbsp;is&nbsp;a&nbsp;local&nbsp;low&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;IsMin(</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;price[],</span><span class=
"f_CodeExample" style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ind)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;interval&nbsp;start&nbsp;variable</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;i=ind-</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;interval&nbsp;end&nbsp;variable</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;finish=ind+</span><span class="f_CodeExample"
style="color: #800000;">InpNum</span><span class=
"f_CodeExample">+1;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;first&nbsp;half&nbsp;of&nbsp;the&nbsp;interval</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(;i&lt;ind;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(price[ind]&gt;=price[i])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;the&nbsp;second&nbsp;half&nbsp;of&nbsp;the&nbsp;interval</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">for</span><span class=
"f_CodeExample">(i=ind+1;i&lt;finish;i++)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(price[ind]&gt;=price[i])</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">false</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;this&nbsp;is&nbsp;an&nbsp;extremum</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
