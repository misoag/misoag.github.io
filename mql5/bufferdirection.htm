<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Indexing Direction in Arrays, Buffers and Timeseries</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "bufferdirection.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=bufferdirection.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=bufferdirection.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="series.htm">Timeseries and Indicators
Access</a> / Indexing Direction in Arrays, Buffers and
Timeseries</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="series.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="timeseries_access.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Indexing Direction in Arrays,
Buffers and Timeseries</span>
</p>

<p class="p_Text"><span class="f_Text">The default indexing of all
arrays and indicator buffers is left to right. The index of the
first element is always equal to zero. Thus, the very first element
of an array or indicator buffer with index 0 is by default on the
extreme left position, while the last element is on the extreme
right position.</span>
</p>

<p class="p_Text"><span class="f_Text">An indicator buffer is a
<a href="dynamic_array.htm" class="topiclink">dynamic array</a> of
type double, whose size is managed by the client terminals, so that
it always corresponds to the number of bars the indicator is
calculated on. A usual dynamic array of type double is assigned as
an indicator buffer using the <a href="setindexbuffer.htm" class=
"topiclink">SetIndexBuffer()</a> function. Indicator buffers do not
require setting of their size using function <a href=
"arrayresize.htm" class="topiclink">ArrayResize()</a> - this will
be done by the executing system of the terminal.</span>
</p>

<p class="p_Text"><span class="f_Text"><a href="series.htm" class=
"topiclink">Timeseries</a> are arrays with reverse indexing, i.e.
the first element of a timeseries is in the extreme right position,
and the last element is in the extreme left position. Timeseries
being used for storing history price data and contain the time
information, we can say that the newest data are placed in the
extreme right position of the timeseries, while the oldest data are
in the extreme left position.</span>
</p>

<p class="p_Text"><span class="f_Text">So the timeseries element
with index 0 contains the information about the latest quote of a
symbol. If a timeseries contains data on a daily timeframe, data of
the current yet uncompleted day are located on the zero position,
and the position with index 1 contains yesterday data.</span>
</p>

<p class="p_H3"><span class="f_H3">Changing the Indexing
Direction</span>
</p>

<p class="p_Text"><span class="f_Text">Function <a href=
"arraysetasseries.htm" class="topiclink">ArraySetAsSeries()</a>
allows changing the method of accessing elements of a dynamic
array; the physical order of data storing in the computer memory is
not changed at that. This function simply changes the method of
addressing array elements, so when copying one array to another
using function <a href="arraycopy.htm" class=
"topiclink">ArrayCopy()</a>, the contents of the recipient array
will not depend on the indexing direction in the source
array.</span>
</p>

<p class="p_Text"><span class="f_Text">Direction of indexing cannot
be changed for statically distributed arrays. Even if an array was
passed as a parameter to a function, attempts to change the
indexing direction inside this function will bring no
effect.</span>
</p>

<p class="p_Text"><span class="f_Text">For indicator buffers, like
for usual arrays, indexing direction can also be set as backward
(like in timeseries), i.e. reference to the zero position in the
indicator buffer will mean reference to the last value on the
corresponding indicator buffer and this will correspond to the
value of the indicator on the latest bar. Still, the physical
location of indicator bars will be unchanged.</span>
</p>

<p class="p_H3"><span class="f_H3">Receiving Price Data in
Indicators</span>
</p>

<p class="p_Text"><span class="f_Text">Each <a href="customind.htm"
class="topiclink">custom indicator</a> must necessarily contain the
<a href="events.htm#oncalculate" class=
"topiclink">OnCalculate()</a> function, to which price data
required for calculating values in indicator buffers are passed.
Indexing direction in these passed arrays can be found out using
function <a href="arraygetasseries.htm" class=
"topiclink">ArrayGetAsSeries()</a>.</span>
</p>

<p class="p_Text"><span class="f_Text">Arrays <a href=
"parameterpass.htm" class="topiclink">passed to the function</a>
reflect price data, i.e. these arrays have the sign of a timeseries
and function <a href="arrayisseries.htm" class=
"topiclink">ArrayIsSeries()</a> will return true when checking
these arrays. However, in any case indexing direction should be
checked only by function <a href="arraygetasseries.htm" class=
"topiclink">ArrayGetAsSeries()</a>.</span>
</p>

<p class="p_Text"><span class="f_Text">In order not to be dependent
on default values, <a href="arraysetasseries.htm" class=
"topiclink">ArraySetAsSeries()</a> should be unconditionally called
for the arrays you are going to work with, and set the required
direction.</span>
</p>

<p class="p_H3"><span class="f_H3">Receiving Price Data and
Indicator Values</span>
</p>

<p class="p_Text"><span class="f_Text">Default indexing direction
of all arrays in Expert Advisors, indicators and scripts is
left-to-right. If necessary, in any mql5 program you can request
timeseries values on any symbol and timeframe, as well as values of
indicators calculated on any symbol and timeframe.</span>
</p>

<p class="p_Text"><span class="f_Text">Use functions Copy...() for
these purposes:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 17px; margin: 3px 17px 3px 17px;">
<li><span class="f_li"><a href="copybuffer.htm" class=
"topiclink">CopyBuffer</a>  copy values of an indicator buffer to
an array of double type;</span>
</li>

<li><span class="f_li"><a href="copyrates.htm" class=
"topiclink">CopyRates</a>  copy price history to an array of
structures <a href="mqlrates.htm" class=
"topiclink">MqlRates</a>;</span>
</li>

<li><span class="f_li"><a href="copytime.htm" class=
"topiclink">CopyTime</a>  copy Time values to an array of datetime
type;</span>
</li>

<li><span class="f_li"><a href="copyopen.htm" class=
"topiclink">CopyOpen</a>  copy Open values to an array of double
type;</span>
</li>

<li><span class="f_li"><a href="copyhigh.htm" class=
"topiclink">CopyHigh</a>  copy High values to an array of double
type;</span>
</li>

<li><span class="f_li"><a href="copylow.htm" class=
"topiclink">CopyLow</a>  copy Low values to an array of double
type;</span>
</li>

<li><span class="f_li"><a href="copyclose.htm" class=
"topiclink">CopyClose</a>  copy Close values to an array of double
type;</span>
</li>

<li><span class="f_li"><a href="copytickvolume.htm" class=
"topiclink">CopyTickVolume</a>  copy tick volumes to an array of
long type;</span>
</li>

<li><span class="f_li"><a href="copyrealvolume.htm" class=
"topiclink">CopyRealVolume</a>  copy equity volumes to a long type
array;</span>
</li>

<li><span class="f_li"><a href="copyspread.htm" class=
"topiclink">CopySpread</a>  copy the spread history to an array of
int type;</span>
</li>
</ul>

<p class="p_li"><span class="f_li">&nbsp;</span>
</p>

<p class="p_li"><span class="f_Text">All these functions work in a
similar way. Let's consider the data obtaining mechanism on the
example of CopyBuffer(). It is implied that the indexing direction
of requested data is that of timeseries, and the position with
index 0 (zero) stores data of the current yet uncompleted bar. In
order to get access to &nbsp;these data we need to copy the
necessary volume of data into the recipient array, e.g. into
array</span> <span class="f_Text" style=
"font-style: italic;">buffer</span><span class=
"f_Text">.</span></p>

<p class="p_li"><img class="help" src="copybuffer.png" width="656"
height="214" alt="copyBuffer" style=
"width:656px;height:214px;border:none">
</p>

<p class="p_Text"><span class="f_Text">When copying we need to
specify the starting position in the source array, starting from
which data will be copied to the recipient array. In case of
success, the specified number of elements will be copied to the
recipient array from the source array (from the indicator buffer in
this case). Irrespective of the indexing value set in the recipient
array, copying is always performed as is shown in the above
figure.</span>
</p>

<p class="p_Text"><span class="f_FunctionRemark">If it is expected
that price data will be handled in a loop with a large number of
iterations, it is advisable that you check the fact of forced
program termination using the <a href="isstopped.htm" class=
"topiclink">IsStopped()</a> function:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;copied=</span><span class="f_CodeExample"
style="color: #0000ff;">CopyBuffer</span><span class=
"f_CodeExample">(ma_handle,</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;Indicator&nbsp;handle</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;The&nbsp;index&nbsp;of&nbsp;the&nbsp;indicator&nbsp;buffer</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Start&nbsp;position&nbsp;for&nbsp;copying</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number,&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Number&nbsp;of&nbsp;values&nbsp;to&nbsp;copy&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Buffer&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;The&nbsp;array&nbsp;that&nbsp;receives&nbsp;the&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">if</span><span class=
"f_CodeExample">(copied&lt;0)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;k=0;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">while</span><span class=
"f_CodeExample">(k&lt;copied&nbsp;&amp;&amp;&nbsp;!</span><span class="f_CodeExample"
style="color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//---&nbsp;Get&nbsp;the&nbsp;value&nbsp;for&nbsp;the&nbsp;k&nbsp;index</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;value=Buffer[k];</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;...&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;work&nbsp;with&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;k++;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #c0504d;">per</span><span class=
"f_CodeExample">=10;&nbsp;</span><span class="f_CodeExample" style=
"color: #808080;">//&nbsp;period&nbsp;of&nbsp;the&nbsp;exponent</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ma_handle;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;indicator&nbsp;handle</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Expert&nbsp;initialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;ma_handle=</span><span class=
"f_CodeExample" style="color: #0000ff;">iMA</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">_Symbol</span><span class=
"f_CodeExample">,0,</span><span class="f_CodeExample" style=
"color: #c0504d;">per</span><span class=
"f_CodeExample">,0,</span><span class="f_CodeExample" style=
"color: #0000ff;">MODE_EMA</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">PRICE_CLOSE</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_SUCCEEDED</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Expert&nbsp;tick&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnTick</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;ema[10];</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;copied=</span><span class="f_CodeExample"
style="color: #0000ff;">CopyBuffer</span><span class=
"f_CodeExample">(ma_handle,</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;indicator&nbsp;handle</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;index&nbsp;of&nbsp;the&nbsp;indicator&nbsp;buffer</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;starting&nbsp;position&nbsp;to&nbsp;copy&nbsp;from</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;number&nbsp;of&nbsp;values&nbsp;for&nbsp;copying</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ema&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;value&nbsp;receiving&nbsp;array</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(copied&lt;0)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//&nbsp;....&nbsp;further&nbsp;code</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href=
"timeseries_access.htm" class="topiclink">Organizing Data
Access</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
