<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Object-Oriented Programming</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "oop.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=oop.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=oop.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> /
Object-Oriented Programming</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="conditional_compilation.htm"><img style=
"vertical-align:middle;" src="previous.png" alt="Back" width="27"
height="27" border="0"></a><a href="incapsulation.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Object-Oriented
Programming</span>
</p>

<p class="p_Text"><span class="f_Text">Object-oriented programming
(OOP) is programming primarily focused on data, while data and
behavior are being inseparably linked. Data and behavior together
constitute a class, while objects are class instances.</span>
</p>

<p class="p_Text"><span class="f_Text">The components of the
object-oriented approach are:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 17px; margin: 3px 17px 3px 17px;">
<li><span class="f_li"><a href="incapsulation.htm" class=
"topiclink">Encapsulation and type extensibility</a></span>
</li>

<li><span class="f_li"><a href="inheritance.htm" class=
"topiclink">Inheritance</a></span>
</li>

<li><span class="f_li"><a href="polymorphism.htm" class=
"topiclink">Polymorphism</a></span>
</li>

<li><span class="f_li"><a href="overload.htm" class=
"topiclink">Overloading</a></span>
</li>

<li><span class="f_li"><a href="virtual.htm" class=
"topiclink">Virtual functions</a></span>
</li>
</ul>

<p class="p_Text"><span class="f_Text">OOP considers computation as
modeling of behavior. The modeled item is the object represented by
computational abstractions. Suppose we want to write a well known
game "Tetris". To do this, we must learn how to model the
appearance of random shapes composed of four squares joined
together by edges. Also we need to regulate the falling speed of
shapes, define operations of rotation and shift of shapes. Moving
of shapes on the screen is limited by the well's boundaries, this
requirement must also be modeled. Besides that, filled rows of
cubes must be destroyed and achieved points must be counted.</span>
</p>

<p class="p_Text"><a class="help" name="atd" id=
"atd"></a><span class="f_Text">Thus, this easy-to-understand game
requires the creation of several models - shape model, well model,
shape movement model and so on. All these models are abstractions,
represented by calculations in the computer. To describe these
models, the concept of Abstract Data Type, ADT (or <a href=
"types.htm#complex_types" class="topiclink">complex data type</a>)
is used. Strictly speaking, the model of the "shapes" motion in the
DOM is not a data type, but it is a set of operations on the
"shape" data type, using the restrictions of the "well" data
type.</span>
</p>

<p class="p_Text"><span class="f_Text">Objects are <a href=
"classes.htm#class" class="topiclink">class</a> variables.
Object-oriented programming allows you to easily create and use
ADT. Object-oriented programming uses the inheritance mechanism.
The benefit of inheritance is in the fact that it allows obtaining
derivative types from data types already defined by a user.</span>
</p>

<p class="p_Text"><span class="f_Text">For example, to create
Tetris shapes, it's convenient to create a base class Shape first.
The other classes representing all seven possible shape types can
be derived on its basis. Behavior of shapes is defined in the base
class, while implementation of behavior of each separate shape is
defined in derivative classes.</span>
</p>

<p class="p_Text"><span class="f_Text">In OOP objects are
responsible for their behavior. ADT developer should include a code
to describe any behavior that would normally be expected from the
corresponding objects. The fact that the object itself is
responsible for its behavior, greatly simplifies the task of
programming for the user of this object.</span>
</p>

<p class="p_Text"><span class="f_Text">If we want to draw a shape
on the screen, we need to know where the center will be and how to
draw it. If a separate shape knows how to draw itself, the
programmer should send a "draw" message when using such a
shape.</span>
</p>

<p class="p_Text"><span class="f_Text">The MQL5 Language is a C++
like, and it also has the <a href="incapsulation.htm" class=
"topiclink">encapsulation</a> mechanism for the implementation of
ADT. On the one hand encapsulation combines the internal details of
the implementation of a particular type, and on the other hand it
combines externally accessible functions that can influence objects
of this type. Implementation details may be inaccessible for a
program that uses this type.</span>
</p>

<p class="p_Text"><span class="f_Text">&nbsp;</span>
</p>

<p class="p_Text"><span class="f_Text">The concept of OOP has a set
of related concepts, including the following:</span>
</p>

<ul class="help_list" style=
"text-align: justify; text-indent: 0px; padding: 0px 0px 0px 17px; margin: 3px 17px 3px 17px;">
<li><span class="f_Text">Simulation of actions from the real
world</span>
</li>

<li><span class="f_Text">User-defined data types</span>
</li>

<li><span class="f_Text">Hiding the implementation details</span>
</li>

<li><span class="f_Text">Possibility of the code reuse through
inheritance</span>
</li>

<li><span class="f_Text">Interpretation of function calls during
execution</span>
</li>
</ul>

<p class="p_li"><span class="f_li">Some of these concepts
are</span> <span class="f_Text">rather vague</span><span class=
"f_li">, some are abstract, others are general.</span></p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
