<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Functions</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "function.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=function.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=function.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="basis.htm">Language Basics</a> /
Functions</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="deleteoperator.htm"><img style="vertical-align:middle;"
src="previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="call.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Functions</span>
</p>

<p class="p_Text"><a class="help" name="function_definition" id=
"function_definition"></a><span class="f_Text">Every task can be
divided into subtasks, each of which can either be directly
represented in the form of a code, or divided into smaller
sub-tasks. This method is called</span> <span class="f_Text" style=
"font-style: italic;">stepwise refinement</span><span class=
"f_Text">. Functions are used for writing the code of sub-tasks to
be solved. The code that describes what a function does is
called</span> <span class="f_Text" style=
"font-style: italic;">function definition:</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">function_header</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;instructions</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">All that is before the first
brace is the</span> <span class="f_Text" style=
"font-style: italic;">header</span> <span class="f_Text">of the
function definition, and what is between braces is the <a class=
"help" name="function_body" id=
"function_body"></a></span><span class="f_Text" style=
"font-style: italic;">body</span> <span class="f_Text">of the
function definition. The function header includes a description of
the return value type, name (<a href="identifiers.htm" class=
"topiclink">identifier</a>) and <a href="formal.htm" class=
"topiclink">formal parameters</a>. &nbsp;The number of parameters
passed to the function is limited and cannot exceed 64.</span></p>

<p class="p_Text"><span class="f_Text">The function can be called
from other parts of the program as many times as necessary. In
fact, the return type, function identifier and parameter types
constitute the</span> <span class="f_Text" style=
"font-style: italic;">function prototype</span><span class=
"f_Text">.</span></p>

<p class="p_Text"><a class="help" name="function_declaration" id=
"function_declaration"></a><span class="f_Text">Function prototype
is the function declaration, but not its definition. Due to the
explicit declaration of the return type and a list of argument
types, the strict type checking and implicit typecasting are
possible during function calls. Very often function declarations
are used in classes to improve the code readability.</span>
</p>

<p class="p_Text"><span class="f_Text">The function definition must
exactly match its declaration. Each declared function must be
defined.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;return&nbsp;value&nbsp;type</span><br>
<span class="f_CodeExample">linfunc&nbsp;(</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;a,&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;b)&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;function&nbsp;name&nbsp;and&nbsp;parameter&nbsp;list</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;composite&nbsp;operator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">&nbsp;(a&nbsp;+&nbsp;b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;return&nbsp;value</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span>
</p>

<p class="p_Text"><span class="f_Text">The <a href="return.htm"
class="topiclink">return</a> operator can return the value of an
expression located in this operator. If necessary, the expression
value is converted to the function result type. What can be
returned: <a href="types.htm#base_types" class="topiclink">simple
types</a>, <a href="casting.htm#casting_structure" class=
"topiclink">simple structures</a>, <a href="object_pointers.htm"
class="topiclink">object pointers</a>. With the</span> <span class=
"f_Text" style="font-style: italic;">return</span> <span class=
"f_Text">operator you can't return any arrays, class objects,
variables of compound structure type.</span></p>

<p class="p_Text"><span class="f_Text">A function that returns no
value should be described as that of <a href="void.htm" class=
"topiclink">void</a> type.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;errmesg(</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;s)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"error:&nbsp;"</span><span class=
"f_CodeExample">+s);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span>
</p>

<p class="p_Text"><a class="help" name="default_value" id=
"default_value"></a><span class="f_Text">Parameters passed to the
function can have default values, which are defined by constants of
that type.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;somefunc(</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;a,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;d=0.0001,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;n=5,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;b=</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;s=</span><span class="f_CodeExample" style=
"color: #008080;">"passed&nbsp;string"</span><span class=
"f_CodeExample">)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Required&nbsp;parameter&nbsp;a&nbsp;=&nbsp;"</span><span class="f_CodeExample">,a);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Pass&nbsp;the&nbsp;following&nbsp;parameters:&nbsp;d&nbsp;=&nbsp;"</span><span class="f_CodeExample">,d,</span><span class="f_CodeExample"
style="color: #008080;">"&nbsp;n&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,n,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;b&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,b,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;s&nbsp;=&nbsp;"</span><span class=
"f_CodeExample">,s);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span>
</p>

<p class="p_Text"><span class="f_Text">If any of parameters has a
default value, all subsequent parameters must also have default
values.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example of incorrect declaration:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;somefunc(</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;a,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;d=0.0001,&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;default&nbsp;value&nbsp;0.0001&nbsp;declared</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;n,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;default&nbsp;value&nbsp;is&nbsp;not&nbsp;specified&nbsp;!</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;b,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;default&nbsp;value&nbsp;is&nbsp;not&nbsp;specified&nbsp;!</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;s=</span><span class="f_CodeExample" style=
"color: #008080;">"passed&nbsp;string"</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span>
</p>

<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="overload.htm"
class="topiclink">Overload</a>, <a href="virtual.htm" class=
"topiclink">Virtual Functions</a>, <a href="polymorphism.htm"
class="topiclink">Polymorphism</a></span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
