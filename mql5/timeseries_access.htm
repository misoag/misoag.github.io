<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>Organizing Data Access</title>
<meta name="keywords" content="">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "timeseries_access.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=timeseries_access.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=timeseries_access.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="series.htm">Timeseries and Indicators
Access</a> / Organizing Data Access</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="bufferdirection.htm"><img style="vertical-align:middle;"
src="previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="seriesinfointeger.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">Organizing Data Access</span>
</p>

<p class="p_Text"><span class="f_Text">In this section questions
connected with obtaining, storing and requesting price data
(<a href="series.htm" class="topiclink">timeseries</a>) are
considered.</span>
</p>

<p class="p_H3"><span class="f_H3">Receiving Data from a Trade
Server</span>
</p>

<p class="p_Text"><span class="f_Text">Before price data become
available in the MetaTrader 5 terminal, they must be received and
processed. To receive data, connection to the MetaTrader 5 trade
server must be established. Data are received in the form of packed
blocks of minute bars from the server upon the request of a
terminal.</span>
</p>

<p class="p_Text"><span class="f_Text">The mechanism of server
reference for data doesn't depend on how the request has been
initiated - by a user when navigating in a chart or in a program
way in the MQL5 language.</span>
</p>

<p class="p_H3"><span class="f_H3">Storing Intermediate Data</span>
</p>

<p class="p_Text"><span class="f_Text">Data received from a server
are automatically unpacked and saved in the HCC intermediate
formate. Data on each symbol are written into a separate
folder:</span> <span class="f_Text" style=
"font-style: italic;">terminal_directory</span><span class=
"f_Text">\bases\</span><span class="f_Text" style=
"font-style: italic;">server_name</span><span class=
"f_Text">\history\</span><span class="f_Text" style=
"font-style: italic;">symbol_name</span><span class="f_Text">. For
example, data on EURUSD received from the MetaQuotes-Demo server
will be stored in</span> <span class="f_Text" style=
"font-style: italic;">terminal_directory</span><span class=
"f_Text">\bases\MetaQuotes-Demo\history\EURUSD\.</span></p>

<p class="p_Text"><span class="f_Text">Data are written into files
with .hcc extension. Each file stores data of minute bars for one
year. For example, the file named 2009.hcc in the EURUSD folder
contains minute bars of EURUSD for year 2009. These files are used
for preparing price data for all timeframes and are not intended
for direct access.</span>
</p>

<p class="p_H3"><span class="f_H3">Obtaining Data on a Necessary
Timeframe out of Intermediate Data</span>
</p>

<p class="p_Text"><span class="f_Text">Intermediate HCC files are
used as the data source for building price data for requested
timeframes in the HC format. Data of HC format are timeseries that
are maximally prepared for a quick access. They are created upon a
request of a chart or a MQL5 program. The volume of data should not
exceed the value of the "Max bars in charts" parameter. Data are
stored for further using in files with hc extension.</span>
</p>

<p class="p_Text"><span class="f_Text">To save resources, data on a
timeframe are stored and saved in RAM only if necessary. If not
called for a long time, they are released from RAM and saved into a
file. For each timeframe, data are prepared regardless of whether
there are ready data for other timeframes or not. Rules of forming
and accessing data are the same for all timeframes. It means,
despite the fact that the unit data stored in HCC is one minute,
the availability of HCC data doesn't mean the availability of data
on M1 timeframe as HC in the same volume.</span>
</p>

<p class="p_Text"><span class="f_Text">Receipt of new data from a
server calls automatic update of used price data in HC format of
all timeframes. It also leads to the recalculation of all
indicators that implicitly use them as input data for
calculations.</span>
</p>

<p class="p_H3"><span class="f_H3">Parameter "Max bars in
chart"</span>
</p>

<p class="p_Text"><span class="f_Text">The "Max bars in charts"
parameter restricts number of bars in HC format available to
charts, indicators and mql5 programs. This is valid for all
available timeframes and serves, first of all, to save computer
resources.</span>
</p>

<p class="p_Text"><span class="f_Text">When setting a large value
of this parameter, it should be remembered, that if deep history
price data for small timeframes are available, memory used for
storing timeseries and indicator buffers can become hundreds of
megabytes and reach the RAM restriction for the client terminal
program (2Gb for 32-bit applications of MS Windows).</span>
</p>

<p class="p_Text"><span class="f_Text">Change of the "Max bars in
charts" comes into effect after the client terminal is restarted.
Change of this parameter causes neither automatic referring to a
server for additional data, nor forming of additional bars of
timeseries. Additional price data are requested from the server,
and timeseries are updated taking into account the new limitation,
in case of either chart scroll to the area with no data, or when
data are requested by a mql5 program.</span>
</p>

<p class="p_Text"><span class="f_Text">Volume of data requested
from the server corresponds to the required number of bars of this
timeframe with the "Max bars in charts" parameter taken into
account. The restriction set by this parameter is not strict, and
in some cases the number of available bars for a timeframe can be a
little more than the current parameter value.</span>
</p>

<p class="p_H3"><span class="f_H3">Data Availability</span>
</p>

<p class="p_Text"><span class="f_Text">Presence of data on HCC
format or even in the prepared for using HC format does not always
denote the absolute availability of these data to be shown in a
chart or to be used in MQL5 programs.</span>
</p>

<p class="p_Text"><span class="f_Text">When accessing to price data
or indicator values from a mql5 program it should be remembered
that their availability in a certain moment of time or starting
from a certain moment of time is not guaranteed. It is connected
with the fact that with the purpose of saving resources, the full
copy of data necessary for a mql5 program isn't stored in
MetaTrader 5; only direct access to the terminal database is
given.</span>
</p>

<p class="p_Text"><span class="f_Text">The price history for all
timeframes is built from common data of HCC format, and any update
of data from a server leads to the update of data for all
timeframes and to the recalculation of indicators. Due to this
access to data can be closed, even if these data were available a
moment ago.</span>
</p>

<p class="p_H3"><a class="help" name="synchronized" id=
"synchronized"></a><span class="f_H3">Synchronization of the
Terminal Data and Server Data</span>
</p>

<p class="p_Text"><span class="f_Text">Since a mql5 program can
call data from any symbol and timeframe, there is a possibility
that data of a necessary timeseries are not formed yet in the
terminal or the necessary price data aren't synchronized with the
trade server. In this case it's hard to predict the latency
time.</span>
</p>

<p class="p_Text"><span class="f_Text">Algorithms using latency
cycles are not the best solution. The only exception in this case
are scripts, because they do not have any alternative algorithm
choice due to not having event handling. For custom indicators such
algorithms, as well as any other latency cycles are strongly not
recommended, because they lead to termination of calculation of all
indicators and any other handling of price data of the
symbol.</span>
</p>

<p class="p_Text"><span class="f_Text">For Expert Advisors and
indicators, it is better to use the <a href="event_fire.htm" class=
"topiclink">event model</a> of handling. If during handling of
OnTick() or OnCalculate() event, data receipt for the required
timeseries failed, you should exit the event handler, relying on
the access availability during the next call of the handler.</span>
</p>

<p class="p_H2"><span class="f_H2">Example of a Script for Adding
History</span>
</p>

<p class="p_Text"><span class="f_Text">Let's consider the example
of a script that executes a request to receive history for the
selected symbol from a trade server. The script is intended for
running in a chart of a selected symbol; timeframe doesn't matter,
because, as it was mentioned above, price data are received from a
trade server as packed one minute data, from which any predefined
timeseries is constructed then.</span>
</p>

<p class="p_Text"><span class="f_Text">Write all actions concerning
data receipt as a separate function CheckLoadHistory(symbol,
timeframe, start_date):</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CheckLoadHistory(</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;start_date)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The CheckLoadHistory()
function is designed as a universal function that can be called
from any program (Expert Advisor, script or indicator); and
therefore it requires three input parameters: symbol name, period
and start date to indicate the beginning of price history you
need.</span>
</p>

<p class="p_Text"><span class="f_Text">Insert necessary checks into
the function code before requesting the missing history. First of
all, we should make sure that the symbol name and period value are
correct:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">&nbsp;||&nbsp;</span><span class="f_CodeExample"
style="color: #262626;">symbol</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #008080;">""</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Symbol</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_CURRENT</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #262626;">period</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Period</span><span class=
"f_CodeExample">();</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Then let's make sure that
the symbol is available in the MarketWatch window, i.e., the
history for the symbol will be available when sending a request to
a trade server. If there is no such a symbol in MarketWatch, add it
using the <a href="symbolselect.htm" class=
"topiclink">SymbolSelect()</a> function.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SymbolInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SYMBOL_SELECT</span><span class=
"f_CodeExample">))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{f</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #0000ff;">ERR_MARKET_UNKNOWN_SYMBOL</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(-1);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">SymbolSelect</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Now we should receive the
start date of the available history for the indicated symbol/period
pair. Perhaps, the value of the input parameter startdate, passed
to CheckLoadHistory(), is within the available history; then
request to a trade server is not needed. In order to obtain the
very first date for the symbol-period as of the moment, the
<a href="seriesinfointeger.htm" class=
"topiclink">SeriesInfoInteger()</a> function with the <a href=
"enum_series_info_integer.htm" class=
"topiclink">SERIES_FIRSTDATE</a> modifier is used.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(1);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The next important check is
checking the type of the program, from which the function is
called. Note, sending request to update the timeseries with the
same period as that of the indicator, that calls the update, is
undesirable. The undesirability of requesting data on the same
symbol-period as that of the indicator is conditioned by the fact
that update of history data is performed in the same thread where
the indicator operates. So the possibility of deadlock occurrence
is high. To check this use the <a href="mqlinfointeger.htm" class=
"topiclink">MQL5InfoInteger()</a> function with the <a href=
"mql5_programm_info.htm" class="topiclink">MQL5_PROGRAM_TYPE</a>
modifier.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5InfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5_PROGRAM_TYPE</span><span class=
"f_CodeExample">)==</span><span class="f_CodeExample" style=
"color: #0000ff;">PROGRAM_INDICATOR</span><span class=
"f_CodeExample">&nbsp;&amp;&amp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Period</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">&nbsp;&amp;&amp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Symbol</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-4);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">If all the checks have been
passed successfully, make the last attempt to do without referring
to the trade server. First let's find out the start date, for which
minute data in HCC format are available. Request this value using
the SeriesInfoInteger() function with the <a href=
"enum_series_info_integer.htm" class=
"topiclink">SERIES_TERMINAL_FIRSTDATE</a> modifier and again
compare it to the value of the start_date parameter.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M1</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_TERMINAL_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;there&nbsp;is&nbsp;loaded&nbsp;data&nbsp;to&nbsp;build&nbsp;timeseries</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;force&nbsp;timeseries&nbsp;build</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,first_date+</span><span class="f_CodeExample"
style="color: #0000ff;">PeriodSeconds</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">),1,times);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;check&nbsp;date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(2);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">If after all the checks the
execution thread is still in the body of the CheckLoadHistory()
function, it means there is a necessity to request the missing
price data from a trade server. First, return the value of "Max
bars in chart" using the <a href="terminalstatus.htm" class=
"topiclink">TerminalInfoInteger()</a> function:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;max_bars=</span><span class="f_CodeExample"
style="color: #0000ff;">TerminalInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">TERMINAL_MAXBARS</span><span class=
"f_CodeExample">);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">We'll need it to prevent
requesting extra data. Then find the very first date in the symbol
history on the trade server (regardless of the period) using
already known function SeriesInfoInteger() with the <a href=
"enum_series_info_integer.htm" class=
"topiclink">SERIES_SERVER_FIRSTDATE</a> modifier.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;first_server_date=0;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M1</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_SERVER_FIRSTDATE</span><span class=
"f_CodeExample">,first_server_date)&nbsp;&amp;&amp;&nbsp;!</span><span class="f_CodeExample"
style="color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(5);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">Since the request is an
asynchronous operation, the function is called in the cycle with a
small delay of 5 milliseconds until the first_server_date variable
receives a value, or the cycle execution is terminated by a user
(<a href="isstopped.htm" class="topiclink">IsStopped()</a> will
return</span> <span class="f_Text" style=
"font-style: italic;">true</span> <span class="f_Text">in this
case</span><span class="f_Text">). Let's indicate a correct value
of the start date, starting from which we request price data from a
trade server.</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_server_date&gt;start_date)&nbsp;start_date=first_server_date;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;first_server_date)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Warning:&nbsp;first&nbsp;server&nbsp;date&nbsp;"</span><span class="f_CodeExample">,first_server_date,</span><span class="f_CodeExample"
style="color: #008080;">"&nbsp;for&nbsp;"</span><span class=
"f_CodeExample">,</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;does&nbsp;not&nbsp;match&nbsp;to&nbsp;first&nbsp;series&nbsp;date&nbsp;"</span><span class="f_CodeExample">,first_date);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">If the start date</span>
<span class="f_Text" style=
"font-style: italic;">first_server_date</span> <span class=
"f_Text">of the server is lower than the start date</span>
<span class="f_Text" style="font-style: italic;">first_date</span>
<span class="f_Text">of the symbol in HCC format, the corresponding
entry will be output in the journal.</span></p>

<p class="p_Text"><span class="f_Text">Now we are ready to make a
request to a trade server asking for missing price data. Make the
request in the form of a cycle and start filling out its
body:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//1.&nbsp;wait&nbsp;for&nbsp;synchronization&nbsp;between&nbsp;the&nbsp;re-built&nbsp;timeseries&nbsp;and&nbsp;intermediate&nbsp;history&nbsp;as&nbsp;HHC</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//2.&nbsp;receive&nbsp;the&nbsp;current&nbsp;number&nbsp;of&nbsp;bars&nbsp;in&nbsp;this&nbsp;timeseries</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;bars&nbsp;is&nbsp;larger&nbsp;than&nbsp;Max_bars_in_chart,&nbsp;we&nbsp;can&nbsp;exit,&nbsp;work&nbsp;is&nbsp;over</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//3.&nbsp;obtain&nbsp;the&nbsp;start&nbsp;date&nbsp;first_date&nbsp;in&nbsp;the&nbsp;re-built&nbsp;timeseries&nbsp;and&nbsp;compare&nbsp;it&nbsp;to&nbsp;start_date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;first_date&nbsp;is&nbsp;lower&nbsp;than&nbsp;start_date,&nbsp;we&nbsp;can&nbsp;exit,&nbsp;work&nbsp;is&nbsp;over</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//4.&nbsp;request&nbsp;from&nbsp;a&nbsp;server&nbsp;a&nbsp;new&nbsp;part&nbsp;of&nbsp;history&nbsp;-&nbsp;100&nbsp;bars&nbsp;starting&nbsp;from&nbsp;last&nbsp;available&nbsp;bar&nbsp;numbered&nbsp;'bars'</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The first three points are
implemented by already known means.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;1.wait&nbsp;till&nbsp;timeseries&nbsp;re-build&nbsp;process&nbsp;is&nbsp;over</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_SYNCHRONIZED</span><span class=
"f_CodeExample">)&nbsp;&amp;&amp;&nbsp;!</span><span class=
"f_CodeExample" style=
"color: #0000ff;">IsStopped</span><span class="f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(5);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;2.request&nbsp;how&nbsp;many&nbsp;bars&nbsp;we&nbsp;have</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #262626;">bars</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Bars</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;bars&nbsp;more&nbsp;than&nbsp;ones&nbsp;that&nbsp;can&nbsp;be&nbsp;drawn&nbsp;in&nbsp;the&nbsp;chart,&nbsp;exit</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">&gt;=max_bars)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-2);&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;3.&nbsp;return&nbsp;the&nbsp;current&nbsp;start&nbsp;date&nbsp;in&nbsp;the&nbsp;timeseries</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;start&nbsp;date&nbsp;was&nbsp;earlier&nbsp;than&nbsp;that&nbsp;requested,&nbsp;task&nbsp;completed</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//4.&nbsp;Request&nbsp;from&nbsp;a&nbsp;server&nbsp;a&nbsp;new&nbsp;part&nbsp;of&nbsp;history&nbsp;-&nbsp;100&nbsp;bars&nbsp;starting&nbsp;from&nbsp;last&nbsp;available&nbsp;bar&nbsp;numbered&nbsp;'bars'</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The last fourth point is
left - requesting history. We can't refer to a server directly, but
any <a href="series.htm" class="topiclink">Copy-function</a>
automatically initiates request sending to a server, if the history
in HCC format is not enough. Since the time of the very first start
date in the</span> <span class="f_Text" style=
"font-style: italic;">first_date</span> <span class=
"f_Text">variable is the simple and natural criterion to evaluate
the request execution degree, then the easiest way is to use the
<a href="copytime.htm" class="topiclink">CopyTime()</a>
function.</span></p>

<p class="p_Text"><span class="f_Text">When calling functions that
copy any data from timeseries, it should be noted that the</span>
<span class="f_Text" style="font-style: italic;">start</span>
<span class="f_Text">parameter (number of the bar, starting from
which price data should be copied) must always be within the
available terminal history. If you have only 100 bars, it
meaningless to try copying 300 bars starting from the bar with the
index 500. Such a request will be understood as an erroneous and
won't be handled, i.e. no additional history will be loaded from a
trade server.</span></p>

<p class="p_Text"><span class="f_Text">That's why we'll copy by 100
bars starting from the bar with the</span> <span class="f_Text"
style="font-style: italic;">bars</span> <span class=
"f_Text">index</span><span class="f_Text">. This will provide the
smooth loading of missing history from a trade server. Actually a
little more than the requested 100 bars will be loaded, while
server sends oversized history.</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;copied=</span><span class="f_CodeExample"
style="color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">bars</span><span class=
"f_CodeExample">,100,times);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">After the copying operation,
we should analyze the number of copied elements. If the attempt
fails, then value of the</span> <span class="f_Text" style=
"font-style: italic;">copied</span> <span class="f_Text">will be
equal to null and the value of the fail_cnt counter will be
increased by 1. After 100 failing attempts, the operation of the
function will be stopped.</span></p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;fail_cnt=0;</span><br>
<span class="f_CodeExample">...</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;copied=</span><span class="f_CodeExample"
style="color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #262626;">bars</span><span class=
"f_CodeExample">,100,times);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(copied&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;check&nbsp;data</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(times[0]&lt;=start_date)&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;the&nbsp;copied&nbsp;value&nbsp;is&nbsp;smaller,&nbsp;ready</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #262626;">bars</span><span class=
"f_CodeExample">+copied&gt;=max_bars)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-2);&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;bars&nbsp;are&nbsp;more&nbsp;than&nbsp;can&nbsp;be&nbsp;drawn&nbsp;in&nbsp;the&nbsp;chart,&nbsp;ready</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail_cnt=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;no&nbsp;more&nbsp;than&nbsp;100&nbsp;failing&nbsp;attempts&nbsp;in&nbsp;succession</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail_cnt++;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(fail_cnt&gt;=100)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-5);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(10);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">So, not only correct
handling of the current situation at each moment of execution is
implemented in the function, but also the termination code is
returned, that can be handled after calling the CheckLoadHistory()
function for getting additional information. For example, this
way:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;res=CheckLoadHistory(InpLoadedSymbol,InpLoadedPeriod,InpStartDate);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">switch</span><span class=
"f_CodeExample">(res)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-1&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Unknown&nbsp;symbol&nbsp;"</span><span class=
"f_CodeExample">,InpLoadedSymbol);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-2&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"More&nbsp;requested&nbsp;bars&nbsp;than&nbsp;can&nbsp;be&nbsp;drawn&nbsp;in&nbsp;the&nbsp;chart"</span><span class="f_CodeExample">);&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-3&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Execution&nbsp;stopped&nbsp;by&nbsp;user"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-4&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Indicator&nbsp;mustn't&nbsp;load&nbsp;its&nbsp;own&nbsp;data"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-5&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Loading&nbsp;failed"</span><span class=
"f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;0&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"All&nbsp;data&nbsp;loaded"</span><span class=
"f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;1&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Already&nbsp;available&nbsp;data&nbsp;in&nbsp;timeseries&nbsp;are&nbsp;enough"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;2&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Timeseries&nbsp;is&nbsp;built&nbsp;from&nbsp;available&nbsp;terminal&nbsp;data"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">default</span><span class=
"f_CodeExample">&nbsp;:&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Execution&nbsp;result&nbsp;undefined"</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_Text"><span class="f_Text">The full code of the
function can be found in the example of a script that shows the
correct organization of access to any data with the handling of
request's results.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Code:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TestLoadHistory.mq5&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;2009,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.mql5.com&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">copyright</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"2009,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">link</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"https://www.mql5.com"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">version</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #008080;">"1.02"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">script_show_inputs</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;input&nbsp;parameters</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InpLoadedSymbol=</span><span class="f_CodeExample"
style="color: #008080;">"NZDUSD"</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #808080;">//&nbsp;Symbol&nbsp;to&nbsp;be&nbsp;load</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;InpLoadedPeriod=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">PERIOD_H1</span><span class="f_CodeExample">;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;Period&nbsp;to&nbsp;be&nbsp;load</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InpStartDate=D'2006.01.01';&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;Start&nbsp;date</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnStart</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Start&nbsp;load"</span><span class=
"f_CodeExample">,InpLoadedSymbol+</span><span class="f_CodeExample"
style="color: #008080;">","</span><span class=
"f_CodeExample">+GetPeriodName(InpLoadedPeriod),</span><span class=
"f_CodeExample" style="color: #008080;">"from"</span><span class=
"f_CodeExample">,InpStartDate);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;res=CheckLoadHistory(InpLoadedSymbol,InpLoadedPeriod,InpStartDate);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">switch</span><span class=
"f_CodeExample">(res)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-1&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Unknown&nbsp;symbol&nbsp;"</span><span class=
"f_CodeExample">,InpLoadedSymbol);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-2&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Requested&nbsp;bars&nbsp;more&nbsp;than&nbsp;max&nbsp;bars&nbsp;in&nbsp;chart"</span><span class="f_CodeExample">);&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-3&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Program&nbsp;was&nbsp;stopped"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-4&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Indicator&nbsp;shouldn't&nbsp;load&nbsp;its&nbsp;own&nbsp;data"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;-5&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Load&nbsp;failed"</span><span class=
"f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;0&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Loaded&nbsp;OK"</span><span class=
"f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;1&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Loaded&nbsp;previously"</span><span class=
"f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;&nbsp;2&nbsp;:&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Loaded&nbsp;previously&nbsp;and&nbsp;built"</span><span class="f_CodeExample">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">break</span><span class=
"f_CodeExample">;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">default</span><span class=
"f_CodeExample">&nbsp;:&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Unknown&nbsp;result"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;first_date;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(InpLoadedSymbol,InpLoadedPeriod,</span><span class="f_CodeExample"
style="color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Bars</span><span class=
"f_CodeExample">(InpLoadedSymbol,InpLoadedPeriod);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"First&nbsp;date&nbsp;"</span><span class=
"f_CodeExample">,first_date,</span><span class="f_CodeExample"
style="color: #008080;">"&nbsp;-&nbsp;"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;bars"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;CheckLoadHistory(</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;start_date)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;first_date=0;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;times[100];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;symbol&nbsp;&amp;&nbsp;period</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #0000ff;">NULL</span><span class=
"f_CodeExample">&nbsp;||&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">symbol</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #008080;">""</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Symbol</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_CURRENT</span><span class=
"f_CodeExample">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">period</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Period</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;if&nbsp;symbol&nbsp;is&nbsp;selected&nbsp;in&nbsp;the&nbsp;MarketWatch</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SymbolInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SYMBOL_SELECT</span><span class=
"f_CodeExample">))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #0000ff;">ERR_MARKET_UNKNOWN_SYMBOL</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(-1);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">SymbolSelect</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">true</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;check&nbsp;if&nbsp;data&nbsp;is&nbsp;present</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(1);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;don't&nbsp;ask&nbsp;for&nbsp;load&nbsp;of&nbsp;its&nbsp;own&nbsp;data&nbsp;if&nbsp;it&nbsp;is&nbsp;an&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5InfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">MQL5_PROGRAM_TYPE</span><span class=
"f_CodeExample">)==</span><span class="f_CodeExample" style=
"color: #0000ff;">PROGRAM_INDICATOR</span><span class=
"f_CodeExample">&nbsp;&amp;&amp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Period</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">&nbsp;&amp;&amp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Symbol</span><span class=
"f_CodeExample">()==</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-4);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;second&nbsp;attempt</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M1</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_TERMINAL_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;there&nbsp;is&nbsp;loaded&nbsp;data&nbsp;to&nbsp;build&nbsp;timeseries</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;force&nbsp;timeseries&nbsp;build</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,first_date+</span><span class="f_CodeExample"
style="color: #0000ff;">PeriodSeconds</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">),1,times);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//---&nbsp;check&nbsp;date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(2);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;max&nbsp;bars&nbsp;in&nbsp;chart&nbsp;from&nbsp;terminal&nbsp;options</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;max_bars=</span><span class="f_CodeExample"
style="color: #0000ff;">TerminalInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">TERMINAL_MAXBARS</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;load&nbsp;symbol&nbsp;history&nbsp;info</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;first_server_date=0;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M1</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_SERVER_FIRSTDATE</span><span class=
"f_CodeExample">,first_server_date)&nbsp;&amp;&amp;&nbsp;!</span><span class="f_CodeExample"
style="color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(5);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;fix&nbsp;start&nbsp;date&nbsp;for&nbsp;loading</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_server_date&gt;start_date)&nbsp;start_date=first_server_date;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;first_server_date)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Print</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Warning:&nbsp;first&nbsp;server&nbsp;date&nbsp;"</span><span class="f_CodeExample">,first_server_date,</span><span class="f_CodeExample"
style="color: #008080;">"&nbsp;for&nbsp;"</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><br>
<span class="f_CodeExample" style=
"color: #008080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;does&nbsp;not&nbsp;match&nbsp;to&nbsp;first&nbsp;series&nbsp;date&nbsp;"</span><span class="f_CodeExample">,first_date);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;load&nbsp;data&nbsp;step&nbsp;by&nbsp;step</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;fail_cnt=0;</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">IsStopped</span><span class=
"f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;wait&nbsp;for&nbsp;timeseries&nbsp;build</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">while</span><span class=
"f_CodeExample">(!</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_SYNCHRONIZED</span><span class=
"f_CodeExample">)&nbsp;&amp;&amp;&nbsp;!</span><span class=
"f_CodeExample" style=
"color: #0000ff;">IsStopped</span><span class="f_CodeExample">())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(5);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;ask&nbsp;for&nbsp;built&nbsp;bars</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Bars</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">&gt;=max_bars)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-2);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;ask&nbsp;for&nbsp;first&nbsp;date</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">SeriesInfoInteger</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">SERIES_FIRSTDATE</span><span class=
"f_CodeExample">,first_date))</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(first_date&gt;0&nbsp;&amp;&amp;&nbsp;first_date&lt;=start_date)&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;copying&nbsp;of&nbsp;next&nbsp;part&nbsp;forces&nbsp;data&nbsp;loading</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;copied=</span><span class="f_CodeExample"
style="color: #0000ff;">CopyTime</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">symbol</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">,100,times);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(copied&gt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;check&nbsp;for&nbsp;data</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(times[0]&lt;=start_date)&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">bars</span><span class=
"f_CodeExample">+copied&gt;=max_bars)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-2);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail_cnt=0;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;no&nbsp;more&nbsp;than&nbsp;100&nbsp;failed&nbsp;attempts</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail_cnt++;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(fail_cnt&gt;=100)&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-5);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">Sleep</span><span class=
"f_CodeExample">(10);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;stopped</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(-3);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Returns&nbsp;string&nbsp;value&nbsp;of&nbsp;the&nbsp;period&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;GetPeriodName(</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">==</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_CURRENT</span><span class=
"f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">Period</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">switch</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M1</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M1"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M2</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M2"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M3</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M3"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M4</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M4"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M5</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M5"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M6</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M6"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M10</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M10"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M12</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M12"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M15</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M15"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M20</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M20"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_M30</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"M30"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H1</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H1"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H2</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H2"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H3</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H3"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H4</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H4"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H6</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H6"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H8</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H8"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_H12</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"H12"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_D1</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Daily"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_W1</span><span class=
"f_CodeExample">:&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Weekly"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">case</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_MN1</span><span class=
"f_CodeExample">:&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Monthly"</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"unknown&nbsp;period"</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>

<p><span class="f_Normal">&nbsp;</span>
</p>

<p><span class="f_Normal">&nbsp;</span>
</p>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
