<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Style-Type" content="text/css">

<title>iAO</title>
<meta name="keywords" content="iAO">
<link rel="stylesheet" href="files/helpindex.css" type="text/css">
<link rel="stylesheet" href="default.css" type="text/css">

<script type="text/JavaScript" src="files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "iao.htm";
</script>

</head>
<body style=
"background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;"><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"index.html?page=iao.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"index.html?page=iao.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->


<table width="100%" border="0" cellpadding="0" cellspacing="0"
style=
"margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
<tr>
<td valign="middle">
<table style="margin: 10px 0" width="100%" border="0" cellspacing=
"0" cellpadding="0">
<tr valign="middle">
<td class="nav"><a class="h_m" href="index.htm">MQL5 Reference</a>
/ <a class="h_m" href="indicators.htm">Technical Indicators</a> /
iAO</td>
<td align="right" style="white-space: nowrap; padding: 0 10px;">
<a href="iama.htm"><img style="vertical-align:middle;" src=
"previous.png" alt="Back" width="27" height="27" border=
"0"></a><a href="iatr.htm"><img style=
"vertical-align:middle;margin-left: 7px;" src="next.png" alt=
"Forward" width="27" height="27" border="0"></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

<div id="help">
<p class="p_H1"><span class="f_H1">iAO</span>
</p>

<p class="p_Function"><span class="f_Function">The function returns
the handle of the Awesome oscillator indicator. It has only one
buffer.</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class=
"f_Keywords">int&nbsp;&nbsp;</span><span class=
"f_Indicators">iAO</span><span class="f_CodeExample">(</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">string</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">symbol</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;symbol&nbsp;name</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_Keywords">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;&nbsp;</span><span class=
"f_Param">period</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;period</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span>
</p>
</td>
</tr>
</table>
</div>

<p class="p_BoldTitles"><span class=
"f_BoldTitles">Parameters</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">symbol</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] The symbol name of the security, the
data of which should be used to calculate the indicator. The
<a href="void.htm" class="topiclink">NULL</a> value means the
current symbol.</span>
</p>

<p class="p_FunctionParameter"><span class=
"f_FunctionParameter">period</span>
</p>

<p class="p_ParameterDesrciption"><span class=
"f_ParameterDesrciption">[in] The value of the period can be one of
the <a href="enum_timeframes.htm" class=
"topiclink">ENUM_TIMEFRAMES</a> values, 0 means the current
timeframe.</span>
</p>

<p class="p_BoldTitles"><span class="f_BoldTitles">Returned
value</span>
</p>

<p class="p_FunctionRemark"><span class="f_FunctionRemark">Returns
the handle of a specified technical indicator, &nbsp;in case of
failure returns <a href="otherconstants.htm" class=
"topiclink">INVALID_HANDLE</a>. The computer memory can be freed
from an indicator that is no more utilized, using the <a href=
"indicatorrelease.htm" class="topiclink">IndicatorRelease()</a>
function, to which the indicator handle is passed.</span>
</p>

<p class="p_Text"><span class="f_Text" style=
"font-weight: bold;">Example:</span>
</p>

<div style=
"text-align: left; text-indent: 0px; border-color: #b3b3b3; border-style: solid; border-width: 1px; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;">
<table cellspacing="0" cellpadding="3" border="0" style=
"text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;">
<p class="p_CodeExample"><span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Demo_iAO.mq5&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;2011,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.mql5.com&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">copyright</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"Copyright&nbsp;2011,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">link</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"https://www.mql5.com"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">version</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #008080;">"1.00"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"The&nbsp;indicator&nbsp;demonstrates&nbsp;how&nbsp;to&nbsp;obtain&nbsp;data"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"of&nbsp;indicator&nbsp;buffers&nbsp;for&nbsp;the&nbsp;iAO&nbsp;technical&nbsp;indicator."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"A&nbsp;symbol&nbsp;and&nbsp;timeframe&nbsp;used&nbsp;for&nbsp;calculation&nbsp;of&nbsp;the&nbsp;indicator,"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"are&nbsp;set&nbsp;by&nbsp;the&nbsp;symbol&nbsp;and&nbsp;period&nbsp;parameters."</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">description</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #008080;">"The&nbsp;method&nbsp;of&nbsp;creation&nbsp;of&nbsp;the&nbsp;handle&nbsp;is&nbsp;set&nbsp;through&nbsp;the&nbsp;'type'&nbsp;parameter&nbsp;(function&nbsp;type)."</span><br>
<span class="f_CodeExample">&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_separate_window</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_buffers</span><span class=
"f_CodeExample">&nbsp;2</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">indicator_plots</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;1</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;the&nbsp;iAO&nbsp;plot</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;indicator_label1&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #008080;">"iAO"</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;indicator_type1&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">DRAW_COLOR_HISTOGRAM</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;indicator_color1&nbsp;&nbsp;clrGreen,clrRed</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;indicator_style1&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">STYLE_SOLID</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">#property</span><span class=
"f_CodeExample">&nbsp;indicator_width1&nbsp;&nbsp;1</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Enumeration&nbsp;of&nbsp;the&nbsp;methods&nbsp;of&nbsp;handle&nbsp;creation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">enum</span><span class=
"f_CodeExample">&nbsp;Creation</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;Call_iAO,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;use&nbsp;iAO</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;Call_IndicatorCreate&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;use&nbsp;IndicatorCreate</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;};</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;input&nbsp;parameters</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;Creation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type=Call_iAO;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;type&nbsp;of&nbsp;the&nbsp;function&nbsp;</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">symbol</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #008080;">"&nbsp;"</span><span class=
"f_CodeExample">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;symbol</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">input</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">ENUM_TIMEFRAMES</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">period</span><span class=
"f_CodeExample">=</span><span class="f_CodeExample" style=
"color: #0000ff;">PERIOD_CURRENT</span><span class=
"f_CodeExample">;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #808080;">//&nbsp;timeframe</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iAOBuffer[];</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iAOColors[];</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;variable&nbsp;for&nbsp;storing&nbsp;the&nbsp;handle&nbsp;of&nbsp;the&nbsp;iAO&nbsp;indicator</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;handle;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;variable&nbsp;for&nbsp;storing</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;name=</span><span class="f_CodeExample"
style="color: #0000ff;">symbol</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;name&nbsp;of&nbsp;the&nbsp;indicator&nbsp;on&nbsp;a&nbsp;chart</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;short_name;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;we&nbsp;will&nbsp;keep&nbsp;the&nbsp;number&nbsp;of&nbsp;values&nbsp;in&nbsp;the&nbsp;Awesome&nbsp;Oscillator&nbsp;indicator</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;bars_calculated=0;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;initialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnInit</span><span class=
"f_CodeExample">()</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;assignment&nbsp;of&nbsp;arrays&nbsp;to&nbsp;indicator&nbsp;buffers</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(0,iAOBuffer,</span><span class="f_CodeExample"
style="color: #0000ff;">INDICATOR_DATA</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">SetIndexBuffer</span><span class=
"f_CodeExample">(1,iAOColors,</span><span class="f_CodeExample"
style="color: #0000ff;">INDICATOR_COLOR_INDEX</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;determine&nbsp;the&nbsp;symbol&nbsp;the&nbsp;indicator&nbsp;is&nbsp;drawn&nbsp;for</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;name=</span><span class=
"f_CodeExample" style="color: #0000ff;">symbol</span><span class=
"f_CodeExample">;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;delete&nbsp;spaces&nbsp;to&nbsp;the&nbsp;right&nbsp;and&nbsp;to&nbsp;the&nbsp;left</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringTrimRight</span><span class=
"f_CodeExample">(name);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringTrimLeft</span><span class=
"f_CodeExample">(name);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;it&nbsp;results&nbsp;in&nbsp;zero&nbsp;length&nbsp;of&nbsp;the&nbsp;'name'&nbsp;string</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">StringLen</span><span class=
"f_CodeExample">(name)==0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;take&nbsp;the&nbsp;symbol&nbsp;of&nbsp;the&nbsp;chart&nbsp;the&nbsp;indicator&nbsp;is&nbsp;attached&nbsp;to</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name=_Symbol;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;create&nbsp;handle&nbsp;of&nbsp;the&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(type==Call_iAO)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle=</span><span class="f_CodeExample"
style="color: #0000ff;">iAO</span><span class=
"f_CodeExample">(name,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle=</span><span class="f_CodeExample"
style="color: #0000ff;">IndicatorCreate</span><span class=
"f_CodeExample">(name,</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">,</span><span class="f_CodeExample" style=
"color: #0000ff;">IND_AO</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;handle&nbsp;is&nbsp;not&nbsp;created</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(handle==INVALID_HANDLE)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;tell&nbsp;about&nbsp;the&nbsp;failure&nbsp;and&nbsp;output&nbsp;the&nbsp;error&nbsp;code</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Failed&nbsp;to&nbsp;create&nbsp;handle&nbsp;of&nbsp;the&nbsp;iAO&nbsp;indicator&nbsp;for&nbsp;the&nbsp;symbol&nbsp;%s/%s,&nbsp;error&nbsp;code&nbsp;%d"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">EnumToString</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">),</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;the&nbsp;indicator&nbsp;is&nbsp;stopped&nbsp;early</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_FAILED</span><span class=
"f_CodeExample">);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;show&nbsp;the&nbsp;symbol/timeframe&nbsp;the&nbsp;Awesome&nbsp;Oscillator&nbsp;indicator&nbsp;is&nbsp;calculated&nbsp;for</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;short_name=</span><span class=
"f_CodeExample" style=
"color: #0000ff;">StringFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"iAO(%s/%s)"</span><span class=
"f_CodeExample">,name,</span><span class="f_CodeExample" style=
"color: #0000ff;">EnumToString</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">period</span><span class=
"f_CodeExample">));</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">IndicatorSetString</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INDICATOR_SHORTNAME</span><span class=
"f_CodeExample">,short_name);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;normal&nbsp;initialization&nbsp;of&nbsp;the&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">INIT_SUCCEEDED</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Custom&nbsp;indicator&nbsp;iteration&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnCalculate</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;rates_total,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;prev_calculated,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">datetime</span><span class=
"f_CodeExample">&nbsp;&amp;time[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;open[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;high[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;low[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;close[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;tick_volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">long</span><span class=
"f_CodeExample">&nbsp;&amp;volume[],</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;&amp;spread[])</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;number&nbsp;of&nbsp;values&nbsp;copied&nbsp;from&nbsp;the&nbsp;iAO&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;values_to_copy;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;determine&nbsp;the&nbsp;number&nbsp;of&nbsp;values&nbsp;calculated&nbsp;in&nbsp;the&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;calculated=</span><span class="f_CodeExample"
style="color: #0000ff;">BarsCalculated</span><span class=
"f_CodeExample">(handle);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(calculated&lt;=0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"BarsCalculated()&nbsp;returned&nbsp;%d,&nbsp;error&nbsp;code&nbsp;%d"</span><span class="f_CodeExample">,calculated,</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;it&nbsp;is&nbsp;the&nbsp;first&nbsp;start&nbsp;of&nbsp;calculation&nbsp;of&nbsp;the&nbsp;indicator&nbsp;or&nbsp;if&nbsp;the&nbsp;number&nbsp;of&nbsp;values&nbsp;in&nbsp;the&nbsp;iAO&nbsp;indicator&nbsp;changed</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---or&nbsp;if&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;calculated&nbsp;the&nbsp;indicator&nbsp;for&nbsp;two&nbsp;or&nbsp;more&nbsp;bars&nbsp;(it&nbsp;means&nbsp;something&nbsp;has&nbsp;changed&nbsp;in&nbsp;the&nbsp;price&nbsp;history)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(prev_calculated==0&nbsp;||&nbsp;calculated!=bars_calculated&nbsp;||&nbsp;rates_total&gt;prev_calculated+1)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;iAOBuffer&nbsp;array&nbsp;is&nbsp;greater&nbsp;than&nbsp;the&nbsp;number&nbsp;of&nbsp;values&nbsp;in&nbsp;the&nbsp;iAO&nbsp;indicator&nbsp;for&nbsp;symbol/period,&nbsp;then&nbsp;we&nbsp;don't&nbsp;copy&nbsp;everything&nbsp;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;otherwise,&nbsp;we&nbsp;copy&nbsp;less&nbsp;than&nbsp;the&nbsp;size&nbsp;of&nbsp;indicator&nbsp;buffers</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">if</span><span class=
"f_CodeExample">(calculated&gt;rates_total)&nbsp;values_to_copy=rates_total;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">else</span><span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values_to_copy=calculated;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">else</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;it&nbsp;means&nbsp;that&nbsp;it's&nbsp;not&nbsp;the&nbsp;first&nbsp;time&nbsp;of&nbsp;the&nbsp;indicator&nbsp;calculation,&nbsp;and&nbsp;since&nbsp;the&nbsp;last&nbsp;call&nbsp;of&nbsp;OnCalculate())</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;for&nbsp;calculation&nbsp;not&nbsp;more&nbsp;than&nbsp;one&nbsp;bar&nbsp;is&nbsp;added</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values_to_copy=(rates_total-prev_calculated)+1;</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;fill&nbsp;the&nbsp;iAOBuffer&nbsp;and&nbsp;iAOColors&nbsp;arrays&nbsp;with&nbsp;values&nbsp;from&nbsp;the&nbsp;Awesome&nbsp;Oscillator&nbsp;indicator</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;if&nbsp;FillArraysFromBuffer&nbsp;returns&nbsp;false,&nbsp;it&nbsp;means&nbsp;the&nbsp;information&nbsp;is&nbsp;nor&nbsp;ready&nbsp;yet,&nbsp;quit&nbsp;operation</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(!FillArraysFromBuffer(iAOBuffer,iAOColors,handle,values_to_copy))&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(0);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;form&nbsp;the&nbsp;message</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">string</span><span class=
"f_CodeExample">&nbsp;comm=</span><span class="f_CodeExample"
style="color: #0000ff;">StringFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"%s&nbsp;==&gt;&nbsp;&nbsp;Updated&nbsp;value&nbsp;in&nbsp;the&nbsp;indicator&nbsp;%s:&nbsp;%d"</span><span class="f_CodeExample">,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">TimeToString</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">TimeCurrent</span><span class=
"f_CodeExample">(),TIME_DATE|TIME_SECONDS),</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;short_name,</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values_to_copy);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;display&nbsp;the&nbsp;service&nbsp;message&nbsp;on&nbsp;the&nbsp;chart</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Comment</span><span class=
"f_CodeExample">(comm);</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;memorize&nbsp;the&nbsp;number&nbsp;of&nbsp;values&nbsp;in&nbsp;the&nbsp;Accelerator&nbsp;Oscillator&nbsp;indicator</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;bars_calculated=calculated;</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;return&nbsp;the&nbsp;prev_calculated&nbsp;value&nbsp;for&nbsp;the&nbsp;next&nbsp;call</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(rates_total);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Filling&nbsp;indicator&nbsp;buffers&nbsp;from&nbsp;the&nbsp;iAO&nbsp;indicator&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">bool</span><span class=
"f_CodeExample">&nbsp;FillArraysFromBuffer(</span><span class=
"f_CodeExample" style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;values[],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;indicator&nbsp;buffer&nbsp;of&nbsp;Awesome&nbsp;Oscillator&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">double</span><span class=
"f_CodeExample">&nbsp;&amp;color_indexes[],&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;color&nbsp;buffer&nbsp;(for&nbsp;storing&nbsp;of&nbsp;color&nbsp;indexes)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;ind_handle,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;handle&nbsp;of&nbsp;the&nbsp;iAO&nbsp;indicator</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;amount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//&nbsp;number&nbsp;of&nbsp;copied&nbsp;values</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;reset&nbsp;error&nbsp;code</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style=
"color: #0000ff;">ResetLastError</span><span class=
"f_CodeExample">();</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;fill&nbsp;a&nbsp;part&nbsp;of&nbsp;the&nbsp;iAOBuffer&nbsp;array&nbsp;with&nbsp;values&nbsp;from&nbsp;the&nbsp;indicator&nbsp;buffer&nbsp;that&nbsp;has&nbsp;0&nbsp;index</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">CopyBuffer</span><span class=
"f_CodeExample">(ind_handle,0,0,amount,values)&lt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;copying&nbsp;fails,&nbsp;tell&nbsp;the&nbsp;error&nbsp;code</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Failed&nbsp;to&nbsp;copy&nbsp;data&nbsp;from&nbsp;the&nbsp;iAO&nbsp;indicator,&nbsp;error&nbsp;code&nbsp;%d"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;quit&nbsp;with&nbsp;zero&nbsp;result&nbsp;-&nbsp;it&nbsp;means&nbsp;that&nbsp;the&nbsp;indicator&nbsp;is&nbsp;considered&nbsp;as&nbsp;not&nbsp;calculated</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(false);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;now&nbsp;copy&nbsp;the&nbsp;indexes&nbsp;of&nbsp;colors</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">if</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">CopyBuffer</span><span class=
"f_CodeExample">(ind_handle,1,0,amount,color_indexes)&lt;0)</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;if&nbsp;the&nbsp;copying&nbsp;fails,&nbsp;tell&nbsp;the&nbsp;error&nbsp;code</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">PrintFormat</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">"Failed&nbsp;to&nbsp;copy&nbsp;color&nbsp;values&nbsp;from&nbsp;the&nbsp;iAO&nbsp;indicator,&nbsp;error&nbsp;code&nbsp;%d"</span><span class="f_CodeExample">,</span><span class="f_CodeExample"
style="color: #0000ff;">GetLastError</span><span class=
"f_CodeExample">());</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style=
"color: #808080;">//---&nbsp;quit&nbsp;with&nbsp;zero&nbsp;result&nbsp;-&nbsp;it&nbsp;means&nbsp;that&nbsp;the&nbsp;indicator&nbsp;is&nbsp;considered&nbsp;as&nbsp;not&nbsp;calculated</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample"
style="color: #0000ff;">return</span><span class=
"f_CodeExample">(false);</span><br>
<span class=
"f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;everything&nbsp;is&nbsp;fine</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">return</span><span class=
"f_CodeExample">(true);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//|&nbsp;Indicator&nbsp;deinitialization&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//+------------------------------------------------------------------+</span><br>
<span class="f_CodeExample" style=
"color: #0000ff;">void</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">OnDeinit</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #0000ff;">const</span><span class=
"f_CodeExample">&nbsp;</span><span class="f_CodeExample" style=
"color: #0000ff;">int</span><span class=
"f_CodeExample">&nbsp;reason)</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;{</span><br>
<span class="f_CodeExample" style=
"color: #808080;">//---&nbsp;clear&nbsp;the&nbsp;chart&nbsp;after&nbsp;deleting&nbsp;the&nbsp;indicator</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class=
"f_CodeExample" style="color: #0000ff;">Comment</span><span class=
"f_CodeExample">(</span><span class="f_CodeExample" style=
"color: #008080;">""</span><span class=
"f_CodeExample">);</span><br>
<span class="f_CodeExample">&nbsp;&nbsp;}</span>
</p>
</td>
</tr>
</table>
</div>
<br>
</div>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
